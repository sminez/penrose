var searchIndex = JSON.parse('{\
"penrose":{"doc":"Penrose: a library for building your very own tiling â€¦","t":"NDNNENNNNNNNNNNNNGNNNNNNNNNNDLLLLLLLLALLLLLAOLLLLALLLLLLLLLLLLLLLLLLLLLOLLLOOLLALLLLOLOLLLLLLLLLLLLLLLAAAMMMMMMMMMMMMMAAAFFAFFFFFFFFFFFFDLLMLLLLLMLMLMLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLALLLLLLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGDDDDLLAMLLLLLLMLLLLLMLLMMLLMLLLMMLLLALLLAMMLLMMLLLMMMLLLLLLLLLNNNNNNGDGGIENNNNEDNGEDIEDNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLMKKLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLFMLLMMLLLLLFLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDDDDIIIILLLLLLLLLLLLKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIGIDLLLKLLLLLLKLLKLLLKLLLLLKLLLLLLLLLLLLKLLLLLAAAANENNLLLLLFFFLLFLLFLFFLFLLLCCCCCCAAAAAADLLLLLLLLLLLLLRRFFFFDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRDDFLLLLLLLLFLLLLLLFLLLLLLLLDLLLLLLLLLLLLLLDLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNELLLLLAALLLLLFFLLLLLFDDLLLLLLLLLLLLLLMMMLLLLMMMFLLLLLLLLDDENENNNNMLLLLLLLLLLLLLLLLLMMLLMLLLLLLLLMLLLLMMLMLMMMLLLLLLLLLLLLLLLLLNNNNNNNEENDDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLDDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMFFFFFFCNNNEENNNNNCCNNNNNECIICLAKLLLLLLKLLLLLLLLKKLLLAKKLLLKLLLKKKKLLLLKLLLKLKLKLKLLAALLLLLKKKLKLKLKKLLLLLLLLLLLLLKKLLLLDGLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRENDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDNEEDNNNNNNDNNNNNNNDDNNNDNNNNNNNNNNNNNEMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLMMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNNNNSSSSSNNNENSSSSSSSSESSNSSNNNSNDENDNDDNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDIDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLL","n":["ClientIsNotVisible","Color","Custom","Err","Error","InsufficientWorkspaces","InvalidClientMessage","InvalidHexColor","InvalidHints","InvalidPropertyData","InvalidUtf8","Io","NoScreens","NonUniqueTags","Ok","ParseInt","Randr","Result","UnknownClient","UnknownKeyName","UnknownModifier","UnknownMouseButton","UnknownStateExtension","X11rbConnect","X11rbConnection","X11rbReplyError","X11rbReplyOrIdError","X11rbX11Error","Xid","argb_u32","as_rgb_hex_string","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builtin","clone","clone","clone_into","clone_into","cmp","core","custom_error","default","deref","eq","eq","extensions","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","impl_message","into","into","into","manage_hooks","map","new_from_hex","partial_cmp","pure","rgb","rgb_u32","rgba","rgba_u32","simple_transformer","source","stack","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","util","x","x11rb","button","format","hex_code","id","n_screens","n_ws","name","name","prop","reason","tags","ty","type_id","actions","hooks","layout","broadcast_layout_message","exit","floating","key_handler","log_current_state","modify_with","remove_and_unmap_focused_client","send_layout_message","spawn","float_all","float_focused","reposition","resize","sink_all","sink_focused","SpacingHook","borrow","borrow_mut","bottom_px","clone","clone_into","default","fmt","from","inner_px","into","outer_px","to_owned","top_px","transform_initial","transform_positions","try_from","try_into","type_id","CenteredMain","Grid","MainAndStack","Monocle","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom_unboxed","boxed","boxed","boxed_clone","boxed_clone","boxed_clone","boxed_clone","boxed_default","boxed_default","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","fmt","fmt","fmt","fmt","from","from","from","from","handle_message","handle_message","handle_message","handle_message","horizontal","horizontal_unboxed","into","into","into","into","layout","layout","layout","layout","messages","name","name","name","name","side","side_mirrored","side_unboxed","to_owned","to_owned","to_owned","to_owned","top","transformers","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vertical","vertical_unboxed","ExpandMain","Hide","IncMain","Mirror","Rotate","ShrinkMain","UnwrapTransformer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Gaps","ReflectHorizontal","ReflectVertical","ReserveTop","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed_clone","boxed_clone","boxed_clone","boxed_clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","fmt","fmt","fmt","fmt","from","from","from","from","handle_message","handle_message","handle_message","handle_message","inner_mut","inner_mut","inner_mut","inner_mut","inner_px","into","into","into","into","layout","layout","layout","layout","layout","layout","layout_empty","layout_empty","layout_empty","layout_empty","layout_workspace","layout_workspace","layout_workspace","layout_workspace","name","name","name","name","outer_px","px","to_owned","to_owned","to_owned","to_owned","transform_initial","transform_initial","transform_initial","transform_initial","transform_initial","transform_initial","transform_positions","transform_positions","transform_positions","transform_positions","transform_positions","transform_positions","transform_positions","transformed_name","transformed_name","transformed_name","transformed_name","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wrap","wrap","wrap","wrap","ClientSet","ClientSpace","Config","State","WindowManager","Xid","add_extension","add_extension","bindings","border_width","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client_set","compose_or_set_event_hook","compose_or_set_layout_hook","compose_or_set_manage_hook","compose_or_set_refresh_hook","compose_or_set_startup_hook","config","current_event","default","default_layouts","event_hook","extension","extension_or_default","floating_classes","fmt","fmt","fmt","focus_follow_mouse","focused_border","from","from","from","hooks","into","into","into","layout","layout_hook","manage_hook","mapped_clients","new","normal_border","refresh_hook","remove_extension","root","run","startup_hook","state","tags","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Alt","Backspace","Ctrl","Delete","Down","Escape","KeyBindings","KeyCode","KeyCodeMask","KeyCodeValue","KeyEventHandler","KeyPress","Left","Left","Meta","Middle","ModifierKey","ModifierKeyIter","Motion","MouseBindings","MouseButton","MouseEvent","MouseEventHandler","MouseEventKind","MouseState","PageDown","PageUp","Press","Release","Return","Right","Right","ScrollDown","ScrollUp","Shift","Tab","Up","Utf8","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","button","call","call","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_detail_and_state","hash","hash","hash","hash","hash","hash","id","ignoring_modifier","into","into","into","into","into","into","into","into","into_iter","iter","keycodes_from_xmodmap","kind","len","mask","mask","modifiers","new","new","next","next_back","nth","parse_keybindings_with_xmodmap","partial_cmp","rpt","size_hint","state","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wpt","ComposedEventHook","ComposedLayoutHook","ComposedManageHook","ComposedStateHook","EventHook","LayoutHook","ManageHook","StateHook","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed","boxed","boxed","call","call","call","call","call","call","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","then","then","then","then","then_boxed","then_boxed","then_boxed","then_boxed","transform_initial","transform_initial","transform_positions","transform_positions","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","IntoMessage","Layout","LayoutStack","LayoutTransformer","Message","borrow","borrow_mut","boxed","boxed_clone","boxed_clone","broadcast_message","default","downcast_ref","fmt","from","handle_message","handle_message","handle_message","inner_mut","into","into_message","into_message","layout","layout","layout_empty","layout_empty","layout_workspace","layout_workspace","name","name","passthrough_message","passthrough_message","run_and_replace","run_transform","run_transform","swap_inner","swap_inner","transform_initial","transform_initial","transform_positions","transform_positions","transformed_name","try_from","try_into","type_id","unwrap","unwrap","actions","hooks","layout","util","Add","FullScreenAction","Remove","Toggle","borrow","borrow_mut","clone","clone_into","cmp","create_or_switch_to_workspace","dmenu_focus_client","dmenu_focus_tag","eq","fmt","focus_or_spawn","from","into","launch_dmenu","partial_cmp","set_fullscreen_state","switch_to_workspace","to_owned","toggle_fullscreen","try_from","try_into","type_id","NamedScratchPad","SpawnOnStartup","ToggleNamedScratchPad","WindowSwallowing","add_ewmh_hooks","add_named_scratchpads","default_workspaces","ewmh","manage","named_scratchpads","startup","window_swallowing","DefaultWorkspace","borrow","borrow_mut","boxed","call","clone","clone_into","fmt","from","into","to_owned","try_from","try_into","type_id","EWMH_SUPPORTED_ATOMS","WM_NAME","add_ewmh_hooks","event_hook","refresh_hook","startup_hook","DefaultTiled","FloatingCentered","FloatingFixed","FloatingRelative","SetWorkspace","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","call","call","call","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","new","new","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","NSP_TAG","NamedScratchPad","ToggleNamedScratchPad","add_named_scratchpads","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","eq","event_hook","fmt","fmt","from","from","into","into","manage_hook","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","SpawnOnStartup","borrow","borrow_mut","boxed","call","clone","clone_into","eq","fmt","from","into","to_owned","try_from","try_into","type_id","WindowSwallowing","borrow","borrow_mut","boxed","call","fmt","from","into","try_from","try_into","type_id","Conditional","Fibonacci","Tatami","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","boxed","boxed","boxed","boxed_clone","boxed_clone","boxed_clone","boxed_default","clone","clone","clone_into","clone_into","default","default","fmt","fmt","fmt","from","from","from","handle_message","handle_message","handle_message","into","into","into","layout","layout","layout","name","name","name","new","new","new","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Critical","Low","Normal","NotifyLevel","borrow","borrow_mut","clone","clone_into","cmp","debug","dmenu","eq","fmt","from","hash","into","notify_send","notify_send_custom","partial_cmp","to_owned","try_from","try_into","type_id","update_monitors_via_xrandr","CurrentStateConfig","NotfyState","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","default","default","eq","fmt","fmt","focused_client","focused_screen","focused_tag","from","from","into","into","line_per_stat","n_clients","n_mapped_clients","summarise_state","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","DMenu","DMenuConfig","DMenuKind","Line","MenuMatch","NoMatch","Rust","Suckless","UserInput","bg_color","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_menu","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","custom_font","custom_prompt","default","eq","fg_color","fmt","fmt","fmt","fmt","from","from","from","from","ignore_case","into","into","into","into","kind","n_lines","new","password_input","run","selected_color","show_line_numbers","show_on_bottom","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_prompt","Above","After","Before","Below","Focus","Head","Left","Position","RelativePosition","Right","Screen","Stack","StackSet","Tail","Workspace","add_invisible_workspace","add_workspace","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_message","broadcast_message","clients","clients","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","contains","contains","contains_tag","current_client","current_screen","current_stack","current_tag","current_workspace","current_workspace_mut","default","default","default","default","default","drag_workspace_backward","drag_workspace_forward","eq","eq","eq","extract","filter","flatten","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus_client","focus_down","focus_down","focus_element","focus_element_by","focus_head","focus_head","focus_screen","focus_tag","focus_up","focus_up","focused","from","from","from","from","from","from","from_filtered","geometry","geometry","handle_message","handle_message","has_floating_windows","head","hidden_workspace_clients","hidden_workspaces","hidden_workspaces_mut","id","index","insert","insert","insert_at","insert_at","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_empty","iter","iter_mut","kill_focused","last","layout_name","len","map","modify","modify_occupied","move_client_to_current_tag","move_client_to_tag","move_focused_to_screen","move_focused_to_tag","new","new","next_layout","next_layout","next_screen","non_hidden_workspaces","on_screen_workspace_clients","on_screen_workspaces","ordered_tags","ordered_workspaces","previous_layout","previous_layout","previous_screen","pull_tag_to_screen","remove","remove_client","remove_focused","remove_focused","reverse","rotate_down","rotate_down","rotate_focus_to_head","rotate_focus_to_head","rotate_up","rotate_up","run_and_replace","screen_for_client","screens","screens_mut","set_available_layouts","set_layout_by_name","set_layout_by_name","sink","swap_down","swap_down","swap_focus_and_head","swap_focus_and_head","swap_up","swap_up","tag","tag_for_client","tag_for_screen","tag_for_workspace_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","toggle_tag","try_from","try_from","try_from","try_from","try_from","try_from","try_from_iter","try_into","try_into","try_into","try_into","try_into","try_into","try_new","type_id","type_id","type_id","type_id","type_id","type_id","unravel","with","workspace","workspace","workspace_mut","workspaces","workspaces_mut","Point","Rect","RelativeRect","RelativeTo","applied_to","apply_as_rect","as_columns","as_rows","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","centered_in","clone","clone","clone","clone_into","clone_into","clone_into","contains","contains_point","corners","default","default","default","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","fullscreen","h","hash","hash","into","into","into","is_larger_than","midpoint","new","new","new","relative_to","relative_to","relative_to","reposition","resize","scale_h","scale_w","shrink_in","split_at_height","split_at_height_perc","split_at_mid_height","split_at_mid_width","split_at_width","split_at_width_perc","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","w","x","x","y","y","notify","print_layout_result","spawn","spawn_for_output","spawn_for_output_with_args","spawn_with_args","Atom","BorderColor","BorderPx","CheckWin","ClientAttr","ClientConfig","ClientEventMask","ClientUnmapMask","InputOnly","InputOutput","Position","Prop","Query","RootEventMask","StackAbove","StackBelow","StackBottom","StackTop","WinType","WindowAttributes","XConn","XConnExt","XEvent","all_props_for","atom","atom_name","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client_geometry","client_should_float","client_supports_protocol","clone","clone","clone","clone_into","clone_into","clone_into","cursor_position","delete_prop","eq","eq","eq","event","existing_clients","flush","fmt","fmt","fmt","focus","from","from","from","get_prop","get_window_attributes","get_wm_state","grab","hash","hash","hash","hide","intern_atom","into","into","into","kill","kill_focused","list_props","manage","map","modify_and_refresh","next_event","position_client","position_clients","property","query","query","query_or","refresh","restack","reveal","root","screen_details","send_client_message","set_active_client","set_client_attributes","set_client_border_color","set_client_config","set_initial_properties","set_prop","set_wm_state","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unmanage","unmap","warp_pointer","warp_pointer_to_screen","warp_pointer_to_window","window_pid","window_title","Conn","RustConn","atom_name","borrow","borrow_mut","client_geometry","connection","conversions","create_window","cursor_position","delete_prop","destroy_window","existing_clients","flush","fmt","focus","from","get_prop","get_window_attributes","get_wm_state","grab","intern_atom","into","kill","list_props","map","new","next_event","root","screen_details","send_client_message","set_client_attributes","set_client_config","set_prop","set_wm_state","try_from","try_into","type_id","unmap","warp_pointer","AUTO_FLOAT_WINDOW_TYPES","Atom","Atom","AtomIter","Cardinal","Manager","NetActiveWindow","NetClientList","NetClientListStacking","NetCurrentDesktop","NetDesktopNames","NetDesktopViewport","NetNumberOfDesktops","NetSupported","NetSupportingWmCheck","NetSystemTrayOpcode","NetSystemTrayOrientation","NetSystemTrayOrientationHorz","NetSystemTrayS0","NetWindowTypeCombo","NetWindowTypeDesktop","NetWindowTypeDialog","NetWindowTypeDnd","NetWindowTypeDock","NetWindowTypeDropdownMenu","NetWindowTypeMenu","NetWindowTypeNormal","NetWindowTypeNotification","NetWindowTypePopupMenu","NetWindowTypeSplash","NetWindowTypeToolbar","NetWindowTypeUtility","NetWmDesktop","NetWmName","NetWmState","NetWmStateDemandsAttention","NetWmStateFullscreen","NetWmStateHidden","NetWmStrut","NetWmWindowType","UTF8String","Window","WmClass","WmDeleteWindow","WmHints","WmName","WmNormalHints","WmProtocols","WmState","WmTakeFocus","WmTransientFor","XEmbed","XEmbedInfo","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","from","from","from_str","hash","into","into","into_iter","iter","len","next","next_back","nth","size_hint","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id","ClientEventMask","ClientMessage","ClientMessage","ClientMessageData","ClientMessageKind","ConfigureEvent","ConfigureNotify","ConfigureRequest","DeleteWindow","Destroy","Enter","Expose","ExposeEvent","FocusIn","KeyPress","Leave","MapRequest","MappingNotify","MouseEvent","NoEventMask","PointerChange","PropertyEvent","PropertyNotify","RandrNotify","ResizeRequest","ResizeRequestEvent","ScreenChange","StructureNotify","SubstructureNotify","TakeFocus","TakeSystrayOwnership","U16","U32","U8","UnmapNotify","XEmbedFocusIn","XEmbedModalityOn","XEmbedNotify","XEmbedWindowActivate","XEvent","abs","as_message","as_u16","as_u32","as_u8","as_usize","atom","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","data","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","id","id","id","id","id","id","into","into","into","into","into","into","into","into","into","into","is_root","is_root","mask","new","r","r","relative","same_screen","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","Atom","Bytes","Cardinal","CopyFromParent","ICON_MASK_HINT","ICON_PIXMAP_HINT","ICON_POSITION_HINT","ICON_WINDOW_HINT","INPUT_HINT","Iconic","InputOnly","InputOutput","MapState","Normal","P_ASPECT","P_BASE_SIZE","P_MAX_SIZE","P_MIN_SIZE","P_POSITION","P_RESIZE_INC","P_SIZE","P_WIN_GRAVITY","Prop","STATE_HINT","URGENCY_HINT","UTF8String","U_POSITION","U_SIZE","UnViewable","Unmapped","Viewable","WINDOW_GROUP_HINT","Window","WindowAttributes","WindowClass","Withdrawn","WmHints","WmHints","WmHintsFlags","WmNormalHints","WmNormalHints","WmNormalHintsFlags","WmState","all","all","apply_to","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","contains","contains","default","default","difference","difference","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","iter","iter","iter_names","iter_names","new","new","new","not","not","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bytes","try_from_bytes","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","AppName","ClassName","Query","StringProperty","Title","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","run","run","run","run","run","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"penrose"],[105,"penrose::Error"],[118,"penrose::builtin"],[121,"penrose::builtin::actions"],[130,"penrose::builtin::actions::floating"],[136,"penrose::builtin::hooks"],[155,"penrose::builtin::layout"],[238,"penrose::builtin::layout::messages"],[329,"penrose::builtin::layout::transformers"],[431,"penrose::core"],[495,"penrose::core::bindings"],[665,"penrose::core::hooks"],[727,"penrose::core::layout"],[774,"penrose::extensions"],[778,"penrose::extensions::actions"],[804,"penrose::extensions::hooks"],[816,"penrose::extensions::hooks::default_workspaces"],[830,"penrose::extensions::hooks::ewmh"],[836,"penrose::extensions::hooks::manage"],[888,"penrose::extensions::hooks::named_scratchpads"],[916,"penrose::extensions::hooks::startup"],[931,"penrose::extensions::hooks::window_swallowing"],[942,"penrose::extensions::layout"],[996,"penrose::extensions::util"],[1020,"penrose::extensions::util::debug"],[1055,"penrose::extensions::util::dmenu"],[1125,"penrose::pure"],[1342,"penrose::pure::geometry"],[1425,"penrose::util"],[1431,"penrose::x"],[1544,"penrose::x11rb"],[1584,"penrose::x::atom"],[1671,"penrose::x::event"],[1878,"penrose::x::property"],[2126,"penrose::x::query"],[2184,"alloc::string"],[2185,"core::cmp"],[2186,"core::fmt"],[2187,"core::fmt"],[2188,"std::io::error"],[2189,"x11rb_protocol::errors"],[2190,"alloc::string"],[2191,"x11rb::errors"],[2192,"core::option"],[2193,"core::error"],[2194,"core::result"],[2195,"core::any"],[2196,"alloc::boxed"],[2197,"core::ops::function"],[2198,"core::ops::function"],[2199,"alloc::vec"],[2200,"anymap::any"],[2201,"core::cell"],[2202,"alloc::sync"],[2203,"core::default"],[2204,"core::fmt"],[2205,"std::collections::hash::map"],[2206,"core::convert"],[2207,"penrose_keysyms"],[2208,"core::marker"],[2209,"core::ops::function"],[2210,"core::cmp"],[2211,"core::fmt"],[2212,"std::io::error"],[2213,"x11rb::rust_connection"],[2214,"bitflags::iter"],[2215,"bitflags::iter"]],"d":["An operation requiring the client to be on a screen was â€¦","A simple RGBA based color","A custom error message from user code or extensions","Contains the error value","Error variants from the core penrose library.","There were not enough workspaces to cover the number of â€¦","Data received as part of a client message had an invalid â€¦","Attempt to create a <code>Color</code> from an invalid hex string","A window hints message was received but unable to be parsed","Data received from the X server when requesting a window â€¦","Invalid UTF8 encoded string","IO error","Penrose is running without any screens to connect to","Duplicate tags were provided for one or more workspaces","Contains the success value","ParseIntError","There was a problem initialising randr","A Result where the error type is a penrose Error","An operation was requested on a client window that is â€¦","A keybinding has been specified for an unknown key name â€¦","An unknown character has been used to specify a modifier â€¦","An unknown mouse button was pressed","An attempt was made to fetch a state extension for a type â€¦","An error that occurred while connecting to an X11 server","An error that occurred on an already established X11 â€¦","An error that occurred with some request.","An error caused by some request or by the exhaustion of â€¦","Representation of an X11 error packet that was sent by the â€¦","An X11 ID for a given resource","0xAARRGGBB representation of this Color","Render this color as a #RRGGBB hew color string","","","","","","","Built-in functionality for penrose.","","","","","","Core data structures and user facing functionality for the â€¦","Quickly create a crate::Error::Custom","","","","","Extensions to the base behaviour of Penrose","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","Mark a type as being usable as a Message for sending to a â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Compose together a set of ManageHook query/hook rules into â€¦","Make creating a pre-defined HashMap a little less verbose","Create a new Color from a hex encoded u32: 0xRRGGBBAA","","Side effect free management of internal window manager â€¦","The RGB information of this color as 0.0-1.0 range floats â€¦","0xRRGGBB representation of this Color (no alpha â€¦","The RGBA information of this color as 0.0-1.0 range floats â€¦","0xRRGGBBAA representation of this Color","Quickly define a LayoutTransformer from a single element â€¦","","Create a Stack containing the arguments. The only required â€¦","","","","","","","","","","","","","","","","Utility functions for use in other parts of penrose","Logic for interacting with the X server","Helpers and utilities for using x11rb as a back end for â€¦","The button ID that was pressed","The format received","The string that was used","The window that was queried","Number of connected screens","Number of provided workspaces","The name of the unknown key","The unrecognised modifier name","The name of the property that was queried","Why parsing failed","The set of non-unique tags","The type of property that was queried","The type ID of the type that was requested","Helpers and pre-defined actions for use in user defined â€¦","Built-in hooks","Built-in layouts.","Send a message to all layouts available to the current â€¦","Exit penrose","Actions for manipulating floating windows.","Construct a KeyEventHandler from a closure or free function","Info log the current window manager State for debugging â€¦","Mutate the ClientSet and refresh the on screen state","Remove the currently focused client from state and unmap â€¦","Send a message to the currently active layout","Spawn an external program as part of a key binding","Float all windows in their current tiled position","Move the currently focused windo to the floating layer in â€¦","Move a currently floating window by a given (x, y) delta","Resize a currently floating window by a given (width, â€¦","Sink all floating windows back into their tiled positions","Sink the current window back into tiling mode if it was â€¦","Simple gaps around the window placement of the enclosed â€¦","","","The number of pixels to reserve at the bottom of the screen","","","","","Returns the argument unchanged.","The desired inner gap size in pixels","Calls <code>U::from(self)</code>.","The desired outer gap size in pixels","","The number of pixels to reserve at the top of the screen","","","","","","A simple Layout with a main and secondary side regions.","A simple grid layout that places windows in the smallest â€¦","A simple Layout with main and secondary regions.","A simple monolce layout that gives the maximum available â€¦","","","","","","","","","Create a new MainAndStack Layout with the main area on the â€¦","Create a new MainAndStack Layout with a main area and the â€¦","Create a new Monocle Layout as a boxed trait object","Create a new Grid Layout as a boxed trait object","","","","","Create a new default MainAndStack Layout as a trait object â€¦","Create a new default CenteredMain Layout as a trait object â€¦","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Create a new CenteredMain Layout with a horizontal main â€¦","Create a new CenteredMain Layout with a horizontal main â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Built-in layout messages.","","","","","Create a new MainAndStack Layout with the main area on the â€¦","Create a new MainAndStack Layout with the main area on the â€¦","Create a new MainAndStack Layout with the main area and â€¦","","","","","Create a new MainAndStack Layout with the main area on the â€¦","Built-in layout transformers.","","","","","","","","","","","","","Create a new CenteredMain Layout with a vertical main area â€¦","Create a new CenteredMain Layout with a vertical main area â€¦","Expand the size of the main area of the Layout.","A Message sent when a Layout is no longer visible (e.g. â€¦","Alter the number of clients contained in the main area of â€¦","Mirror the Layout over either the horizontal or vertical â€¦","Rotate the Layout to a new orientation","Shrink the size of the main area of the Layout","Unwrap a LayoutTransformer to return the underlying Layout.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Simple gaps around the window placement of the enclosed â€¦","Wrap an existing layout and reflect its window positions â€¦","Wrap an existing layout and reflect its window positions â€¦","Reserve <code>px</code> pixels at the top of the screen.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","The desired inner gap size in pixels","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","The inner Layout having gaps applied to it.","The wrapped inner layout","","","","","","","","","","","","","The desired outer gap size in pixels","The number of pixels to reserve at the top of the screen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrap an existing layout with this transformer","Wrap an existing layout with this transformer","Wrap an existing Layout with the given gap sizes.","Wrap an existing Layout with the given reserved area.","The pure client state information for the window manager","The pure client state information for a single Workspace","The user specified config options for how the window â€¦","Mutable internal state for the window manager","A top level struct holding all of the state required to â€¦","An X11 ID for a given resource","Add a typed State extension to this State.","Add a typed State extension to this WindowManager.","Setting up and responding to user defined key/mouse â€¦","The width in pixels to use for drawing window borders","","","","","","","The pure window manager state","Set the event_hook or compose it with what is already set.","Set the layout_hook or compose it with what is already set.","Set the manage_hook or compose it with what is already set.","Set the refresh_hook or compose it with what is already â€¦","Set the startup_hook or compose it with what is already â€¦","The user defined configuration options for running the â€¦","The event currently being processed.","","The stack of layouts to use for each workspace","A StateHook to run before processing each XEvent","Get access to a shared state extension.","Get access to a shared state extension or set it using â€¦","Window classes that should always be assigned floating â€¦","","","","Whether or not the mouse entering a new window should set â€¦","The RGBA color to use for the focused window border","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Traits for writing and composing hooks.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Layouts for positioning client windows on the screen â€¦","A LayoutHook to run when positioning clients on the screen","A ManageHook to run after each new window becomes managed â€¦","The set of all client windows currently mapped to a screen.","Construct a new WindowManager with the provided config and â€¦","The RGBA color to use for normal (unfocused) window borders","A StateHook to run every time the on screen X state is â€¦","Remove a shared state extension entirely.","The Xid of the root window for the running WindowManager.","Start the WindowManager and run it until told to exit.","A StateHook to run before entering the main event loop","The mutable State of the window manager","The ordered set of workspace tags to use on window manager â€¦","","","","","","","","","","Alt","Backspace","Control","Delete","Down","Escape","User defined key bindings","A key press and held modifiers","A u16 X key-code bitmask","A u8 X key-code enum value","Some action to be run by a user key binding","Abstraction layer for working with key presses","Left","1","Meta / super / windows","2","Known modifier keys for bindings","An iterator over the variants of ModifierKey","The mouse was moved while a button was held","User defined mouse bindings","Known mouse buttons for binding actions","A mouse movement or button event","An action to be run in response to a mouse event","The types of mouse events represented by a MouseEvent","A mouse state specification indicating the button and â€¦","PageDown","PageUp","A button was pressed","A button was released","Return / enter key","Right","3","5","4","Shift","Tab","Up","A raw character key","","","","","","","","","","","","","","","","","The xcb button ID for this MouseState","The MouseButton being held","Call this handler with the current window manager state","Call this handler with the current window manager state â€¦","","","","","","","","","","","","","","","","","","The key code that was held","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Parse raw mouse state values into a MouseState","","","","","","","The ID of the window that was contained the click","Create a new KeyCode from this one that removes the given â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Run the xmodmap command to dump the system keymap table.","Was this press, release or motion?","","The xcb bitmask for this MouseState","The held modifier mask","All ModifierKeys being held","Construct a new MouseState","Construct a new MouseEvent from raw data","","","","Parse string format key bindings into KeyCode based â€¦","","Absolute coordinate of the event","","The modifier and button code that was received","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Coordinate of the event relative to top-left of the window â€¦","The result of composing two event hooks using <code>then</code>","The result of composing two state hooks using <code>then</code>","The result of composing two manage hooks using <code>then</code>","The result of composing two state hooks using <code>then</code>","Handle an XEvent, return <code>true</code> if default event handling â€¦","Logic to run before and after laying out clients","Action to run when a new client becomes managed.","An arbitrary action that can be run and modify State","","","","","","","","","Convert to a trait object","Convert to a trait object","Convert to a trait object","Convert to a trait object","Run this hook","Run this hook","Run this hook","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Compose this hook with another EventHook. The second hook â€¦","Compose this hook with another ManageHook.","Compose this hook with another StateHook.","Compose this hook with another LayoutHook.","Compose this hook with a boxed EventHook. The second hook â€¦","Compose this hook with a boxed ManageHook.","Compose this hook with a boxed StateHook.","Compose this hook with a boxed LayoutHook.","Optionally modify the screen dimensions being given to a â€¦","","Optionally modify the client positions returned by a Layout","","","","","","","","","","","","","","Marker trait for a type that can be sent as a Message.","A Layout is responsible for positioning a Stack of clients â€¦","A stack of Layout options for use on a particular â€¦","A wrapper round another Layout that is able to intercept â€¦","A dynamically typed message to be sent to a Layout for â€¦","","","Convert to a trait object.","Provide a clone of this Layout wrapped as a trait object. â€¦","","Send the given Message to every Layout in this stack â€¦","","Check to see whether this Message is a particular type","","Returns the argument unchanged.","Process a dynamic Message.","Send the given Message to the currently active Layout.","","Provide a mutable reference to the Layout wrapped by this â€¦","Calls <code>U::from(self)</code>.","Wrap this value as a dynamically typed message for sending â€¦","Wrap this value as a dynamically typed message for sending â€¦","Generate screen positions for clients from a given Stack.","","Generate screen positions for an empty Stack.","","Generate screen positions for clients on a given â€¦","","A short display name for this Layout, appropriate for â€¦","","Pass a message on to the wrapped inner Layout.","Pass a message on to the wrapped inner Layout.","Run the currently focused Layout and return the positions â€¦","Apply the LayoutTransformer to its wrapped inner Layout.","Apply the LayoutTransformer to its wrapped inner Layout.","Replace the currently wrapped Layout with a new one.","Replace the currently wrapped Layout with a new one.","Modify the initial Rect that will be passed to the inner â€¦","Modify the initial Rect that will be passed to the inner â€¦","Optionally modify any of the positions returned by the â€¦","Optionally modify any of the positions returned by the â€¦","The same as Layout::name but for LayoutTransformer itself.","","","","Remove the inner Layout from this LayoutTransformer.","Remove the inner Layout from this LayoutTransformer.","Helpers and pre-defined actions for use in user defined â€¦","Hook implementations and helpers for adding to your â€¦","Layout behaviour that is more specialised or complex than â€¦","Utility extensions for use in the penrose window manager","Force the window into fullscreen state","The possible valid actions to use when manipulating full â€¦","Force the window out of fullscreen state","Toggle the fullscreen state of the window","","","","","","Jump to, or create a Workspace.","Use DMenu to dynamically select and focus a client window.","Use DMenu to dynamically select and focus a client window.","","","Focus a client with the given class as <code>WM_CLASS</code> or spawn â€¦","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Launch DMenu for its most basic purposes, launching other â€¦","","Set the fullscreen state of a particular client","Jump to a Workspace by name.","","Toggle the fullscreen state of the currently focused â€¦","","","","","","","","","","Configure workspaces to auto-spawn a set of windows if â€¦","EWMH compliance for Penrose","Manage hooks for common manage actions","Support for managing multiple floating scratchpad programs â€¦","Startup hooks for direct adding to your penrose config.","Window swallowing in the style of â€¦","Specify a workspace by <code>tag</code> and use a named layout to spawn â€¦","","","Create a new boxed <code>DefaultWorkspace</code> that can be added to â€¦","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","The set of Atoms this extension adds support for.","The WM_NAME that will be set for the X server","Add the required hooks to manage EWMH compliance to an â€¦","Intercept messages from external applications and handle â€¦","Notify external clients of the current status of â€¦","Advertise EWMH support to the X server","Perform no additional actions when managing a new client.","Float clients in the center of the screen.","Float clients at a fixed position on the screen.","Float clients at a relative position to the current screen.","Move the specified client to the named workspace.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new FloatingCentered with the given width and â€¦","Create a new FloatingRelative with the given x, y, width â€¦","","","","","","","","","","","","","","","","The tag used for a placeholder Workspace that holds â€¦","A toggle-able client program that can be shown and hidden â€¦","Toggle the visibility of a NamedScratchPad.","Add the required hooks to manage EWMH compliance to an â€¦","","","","","","","","","Remove destroyed clients from internal scratchpad state","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Store clients matching NamedScratchPad queries and run the â€¦","Create a new named scratchpad.","","","","","","","","Spawn a client program on window manager startup","","","Create a new startup hook ready for adding to your Config","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Replace windows matching the parent Query when they spawn â€¦","","","Create a new window swallowing rule based on the provided â€¦","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Conditionally run one of two layouts based on a predicate â€¦","Inspired by the Fibonacci layout available for dwm: â€¦","Inspired by the Tatami layout available for dwm: â€¦","","","","","","","Create a new Conditional layout as with <code>new</code> but returned â€¦","Create a new Fibonacci layout as with <code>new</code> but returned as â€¦","Create a new Tatami layout returned as a trait object â€¦","","","","Create a new default Fibonacci layout as a trait object â€¦","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Construct a new Conditional layout, selecting from one of â€¦","Create a new Fibonacci layout with a specified cutoff for â€¦","Create a new Tatami layout with the specified ratio for â€¦","","","","","","","","","","","","Critical priority","Low priority","Normal priority","A notification level when calling notify-send","","","","","","Debugging utilities for diagnosing issues with penrose.","A simple wrapper for sucklessâ€™ dmenu tool for providing â€¦","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Send a notification using the <code>notify-send</code> command line â€¦","Send a notification using the <code>notify-send</code> command line â€¦","","","","","","Detect the current monitor set up and arrange the monitors â€¦","Flag based configuration of debug printing of the current â€¦","Use <code>notify-send</code> to display details about the current â€¦","","","","","","","","","","","","","","","Should the focused client id (if there is one) be shown?","Should the current screen index be shown?","Should the focused workspace tag be shown?","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Should each stat be displayed on its own line?","Should the total number of managed clients be shown?","Should the number of clients expected to be mapped to the â€¦","Summarise the current state of the window manager as â€¦","","","","","","","","","A wrapper around the suckless dmenu program for creating â€¦","Custom configuration options for <code>DMenu</code>.","Two different derivatives of dmenu","The selected line along its line number (0 indexed)","The result of attempting to match against user input in a â€¦","The user exited out of matching or had nothing typed","Newer <code>dmenu-rs</code>","Sucklessâ€™s version of dmenu","Nothing matched and this was the userâ€™s input when they â€¦","Background color for the rendered window","","","","","","","","","Run this <code>DMenu</code> command and return the selected choice.","","","","","","","","","Allow the user to load a custom font","Optional prompt customization.","","","Foreground color for text","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Should dmenu ignore case in the user input when matching?","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Specify to kind of dmenu to use","Number of lines to display at a time.","Create a new <code>DMenu</code> command which can be triggered and â€¦","Should dmenu treat the input as a password and render â€¦","Used for launching regular old <code>DMenu</code> with no menu matching â€¦","Selected line background color","Should line numbers be displayed to the user?","Show dmenu at the bottom the the screen.","","","","","","","","","","","","","","","","","Construct a default config with a custom prompt","Above the current position","Below the current focus point","Above the current focus point","Below the current position","The current focus point","The first element of the stack","Left of the current position","A position within a Stack.","A relative position along the horizontal and vertical axes","Right of the current position","A wrapper around a single Workspace that includes the â€¦","A Stack can be thought of as a linked list with a hole â€¦","The side-effect free internal state representation of the â€¦","The last element of the stack","A wrapper around a Stack of windows belonging to a single â€¦","Add a new invisible Workspace to this StackSet.","Add a new Workspace to this StackSet.","","","","","","","","","","","","","Send the given Message to every Layout in this stack â€¦","Pass the given message on to <em>all</em> layouts available to this â€¦","Iterate over each client in this StackSet in an arbitrary â€¦","An iterator over all windows in this workspace.","","","","","","","","","","","","","Check whether a given element is in this Stack","Returns <code>true</code> if the StackSet contains an element equal to â€¦","Check if a given window is currently part of this workspace","Is the given tag present in the StackSet?","Extract a reference to the focused element of the current â€¦","An immutable reference to the currently focused Screen","An immutable reference to the current Stack if there is one","The <code>tag</code> of the current Workspace","An immutable reference to the current Workspace","A mutable reference to the current Workspace","","","","","","Drag the focused workspace onto the previous Screen, â€¦","Drag the focused workspace onto the next Screen, holding â€¦","","","","Extract elements satisfying a predicate into a Vec, â€¦","Retain only elements which satisfy the given predicate. If â€¦","Flatten a Stack into a Vector, losing the information of â€¦","Record a known client as floating, giving its preferred â€¦","","","","","","","","","","An immutable reference to the focused window for this â€¦","Focus the given client and set its Workspace as current â€¦","Move focus from the current element down the stack, â€¦","Move focus from the current element down the Stack, â€¦","Attempt to focus a given element in the Stack if it is â€¦","Focus the first element found matching the given predicate â€¦","Move focus to the element in the head position","Move focus to the element in the head position. This is a â€¦","Set focus to the Screen with the specified index.","Set focus to the Workspace with the specified tag.","Move focus from the current element up the stack, wrapping â€¦","Move focus from the current element up the Stack, wrapping â€¦","Return a reference to the focused element in this Stack","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Attempt to create a new Stack from this one by filtering â€¦","Geometry primitives","The physical screen size of this Screen as a Rect.","Send the given Message to the currently active Layout.","Pass the given message on to the currently focused layout.","Check whether a given tag currently has any floating â€¦","Return a reference to the first element in this Stack","Iterate over clients from workspaces not currently mapped â€¦","Iterate over the currently hidden Workspace in this â€¦","Iterate over the currently hidden Workspace in this â€¦","A fixed integer ID for this workspace.","The index of this screen.","Insert the given element in place of the current focus, â€¦","Insert the given client to the current Stack in a default â€¦","Insert the given element at the requested position in the â€¦","Insert the given client to the current Stack at the â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Always false: a Stack always has at least one focused â€¦","Whether or not this workspace currently holds any windows","Provide an iterator over this stack iterating over up, â€¦","Provide an iterator over this stack iterating over up, â€¦","Delete the currently focused client from this stack if â€¦","Return a reference to the last element in this Stack","The name of the currently active layout being used by this â€¦","The number of elements in this Stack.","Map a function over all elements in this Stack, returning â€¦","Apply a function to modify the current Stack if there is â€¦","Apply a function to modify the current Stack if it is â€¦","Move the given client to the focused position of the â€¦","Move the given client to the focused position of the â€¦","Move the focused client of the current Workspace to the â€¦","Move the focused client of the current Workspace to the â€¦","Create a new Stack specifying the focused element and and â€¦","Create a new Workspace with the given layouts and stack.","Switch to the next available Layout on the focused â€¦","Switch to the next available layout for this workspace.","Move focus to the next Screen","Iterate over each non-hidden Workspace in this StackSet in â€¦","Iterate over clients present in on-screen Workspaces.","Iterate over the Workspace currently displayed on a screen â€¦","All Workspace tags in this StackSet order by their id that â€¦","All Workspaces in this StackSet order by their id that â€¦","Switch to the previous available Layout on the focused â€¦","Switch to the previous available layout for this workspace.","Move focus to the previous Screen","Focus the requested tag on the current screen, swapping â€¦","Remove an element from the stack.","Delete a client from this StackSet.","Remove the focused element of this Stack. If this was the â€¦","Remove the currently focused client from this stack if â€¦","Reverse the ordering of a Stack (up becomes down) while â€¦","Rotate all elements of the stack back, wrapping from â€¦","Rotate all elements of the stack back, wrapping from â€¦","Rotate the Stack until the current focused element is in â€¦","Rotate the Stack until the current focused element is in â€¦","Rotate all elements of the stack forward, wrapping from â€¦","Rotate all elements of the stack forward, wrapping from â€¦","Run the currently focused Layout and return the positions â€¦","If the given client is currently visible on a screen â€¦","Iterate over each Screen in this StackSet in an arbitrary â€¦","Mutably iterate over each Screen in this StackSet in an â€¦","Replace the current LayoutStack with a new one, returning â€¦","Attempt to set the current Layout by name.","Attempt to set the active Layout by name if it is â€¦","Clear the floating status of a client, returning its â€¦","Swap the focused element with the one below, wrapping from â€¦","Swap the position of the focused element with one below it.","Swap the current head element with the focused element in â€¦","Swap the current head element with the focused element in â€¦","Swap the focused element with the one above, wrapping from â€¦","Swap the position of the focused element with one above it.","The string tag for this workspace.","Find the tag of the Workspace containing a given client. â€¦","Find the tag of the Workspace currently displayed on Screenâ€¦","Find the tag of the Workspace with the given NetWmDesktop â€¦","","","","","","","","","","Toggle focus back to the previously focused Workspace â€¦","","","","","","","For an iterator of at least one element, the first element â€¦","","","","","","","Create a new StackSet of empty stacks with the given â€¦","","","","","","","Iterate over the clients in this stack from the the â€¦","If the current Stack is None, return <code>default</code> otherwise â€¦","A reference to the Workspace with a tag of <code>tag</code> if there is â€¦","The Workspace current visible on this screen","A mutable reference to the Workspace with a tag of <code>tag</code> if â€¦","Iterate over each Workspace in this StackSet in an â€¦","Mutably iterate over each Workspace in this StackSet in an â€¦","An x,y coordinate pair","An X window / screen position: top left corner + extent","An X window / screen position: top left corner + extent as â€¦","Something that can be converted into a RelativeRect by â€¦","Apply the proportions of this RelativeRect to a given Rect.","Apply some Rect based operation to this RelativeRect by â€¦","Split this <code>Rect</code> into evenly sized columns.","Split this <code>Rect</code> into evenly sized rows.","","","","","","","Center this Rect inside of <code>enclosing</code>.","","","","","","","Check whether this Rect contains <code>other</code> as a sub-Rect","Check whether this Rect contains <code>p</code>","The four corners of this Rect in Point form returned in â€¦","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","All available space within a given Rect","The height of this rect","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether this Rect is physically larger than <code>other</code> â€¦","The midpoint of this rectangle.","Create a new Point.","Create a new RelativeRect from the provided values.","Create a new Rect.","Convert to a RelativeRect using the reference Rect","","","Update the position of this Rect by specified deltas.","Update the width and height of this Rect by specified â€¦","Create a new Rect with height equal to <code>factor</code> x <code>self.h</code>","Create a new Rect with width equal to <code>factor</code> x <code>self.w</code>","Shrink width and height by the given pixel border, â€¦","Divides this rect into two rows where the first has the â€¦","Divide this rect into two rows where the first takes up â€¦","Divides this rect into two rows along its midpoint.","Divides this rect into two columns along its midpoint.","Divides this rect into two columns where the first has the â€¦","Divide this rect into two columns where the first takes up â€¦","","","","","","","","","","","","","The width of this rect","An absolute x coordinate relative to the root window","The x-coordinate of the top left corner of this rect","An absolute y coordinate relative to the root window","The y-coordinate of the top left corner of this rect","Use <code>notify-send</code> to display a message to the user","Run a given <code>Layout</code> for a stack of n clients and print a â€¦","Run an external command","Run an external command and return its output.","Run an external command with arguments and return its â€¦","Run an external command with the specified command line â€¦","","Border color as an argb hex value","The border width in pixels","A simple hidden stub window for facilitating other API â€¦","Attributes for an X11 client window (not all are curently â€¦","On screen configuration options for X clients (not all are â€¦","Set the pre-defined client event mask","Set the pre-defined client event mask for sending unmap â€¦","A window that receives input only (not queryable)","A regular window. The Atom passed should be a valid _â€¦","Absolute size and position on the screen as a Rect","","","Set the pre-defined root event mask","Mark this window as stacking on top of its peer","Mark this window as stacking below the given Xid","Mark this window as stacking below all other windows","Mark this window as stacking above all other windows","A window type to be specified when creating a new window â€¦","","A handle on a running X11 connection that we can use for â€¦","Extended functionality for XConn impls in order to run the â€¦","","Fetch the value of all known properties for a given client â€¦","Data types for working with X atoms","Look up the string name of a given Atom by its Xid.","","","","","","","Look up the current dimensions and position of a given â€¦","Check whether or not the given client should be assigned â€¦","Check to see if a given client window supports a â€¦","","","","","","","Ask the X server for the current (x, y) coordinate of the â€¦","Delete a property for a given client window.","","","","Data types for working with X events","Ask the X server for the IDs of all currently known client â€¦","Flush any pending events to the X server.","","","","Set X input focus to be held by the given client window.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Look up a specific property on a given client window.","Request the WindowAttributes for a given client window â€¦","Get the current WmState for a given client window.","Grab the specified key and mouse states, intercepting them â€¦","","","","Hide a client by unmapping it and setting its WmState to â€¦","Look up the Xid of a given Atom name. If it is not â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Kill the given client window, closing it.","Kill the focused client if there is one","List the known property names set for a given client.","Establish the window manager state for the given client â€¦","Map the given client window to the screen with its current â€¦","Apply a pure function that modifies a ClientSet and then â€¦","Block and wait for the next event from the X server so it â€¦","Update the geometry of a given client based on the given â€¦","Restack and set the geometry for an ordered list of client â€¦","Data types for working with X window properties","Queries against client windows","Run the provided Query, returning the result.","Run the provided Query, returning the result or a default â€¦","Refresh the current X server state based on a diff of the â€¦","Restack the given windows in, each one above the last.","Display a client on the screen by mapping it and setting â€¦","The ID of the window manager root window.","Ask the X server for the dimensions of each currently â€¦","Send a ClientMessage to a given client.","Update the currently focused client and refresh the X â€¦","Set one or more ClientAttr for a given client window.","Update the border color of the given client window.","Set the ClientConfig for a given client window.","Set the initial window properties for a newly managed â€¦","Set a specific property on a given client window.","Set the current WmState for a given client window.","","","","","","","","","","","","","Remove the window manager state for the given client â€¦","Unmap the given client window from the screen, hiding it.","Reposition the mouse cursor to the given (x, y) â€¦","Warp the mouse cursor to the center of the given screen.","Warp the mouse cursor to the center of the given client â€¦","Request a windowâ€™s PID via the _NET_WM_PID property.","Request the title of a given client window following â€¦","Handles communication with an X server via the x11rb crate.","A pure rust based connection to the X server using a â€¦","","","","","Get a handle to the underlying connection.","Conversions to Penrose types from X11rb types","Create and map a new window to the screen with the â€¦","","","Destroy the window identified by the given <code>Xid</code>.","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","Construct an X11rbConnection  backed by the x11rb backend â€¦","","","","","","","","","","","","","","Clients with one of these window types will be auto floated","A Penrose internal representation of X atoms.","ATOM","An iterator over the variants of Atom","ATOM_CARDINAL","MANAGER","_NET_ACTIVE_WINDOW","_NET_CLIENT_LIST","_NET_CLIENT_LIST","_NET_CURRENT_DESKTOP","_NET_DESKTOP_NAMES","_NET_DESKTOP_VIEWPORT","_NET_NUMBER_OF_DESKTOPS","_NET_SUPPORTED","_NET_SUPPORTING_WM_CHECK","_NET_SYSTEM_TRAY_OPCODE","_NET_SYSTEM_TRAY_ORIENTATION","_NET_SYSTEM_TRAY_ORIENTATION_HORZ","_NET_SYSTEM_TRAY_S0","_NET_WM_WINDOW_TYPE_COMBO","_NET_WM_WINDOW_TYPE_DESKTOP","_NET_WM_WINDOW_TYPE_DIALOG","_NET_WM_WINDOW_TYPE_DND","_NET_WM_WINDOW_TYPE_DOCK","_NET_WM_WINDOW_TYPE_DROPDOWN_MENU","_NET_WM_WINDOW_TYPE_MENU","_NET_WM_WINDOW_TYPE_NORMAL","_NET_WM_WINDOW_TYPE_NOTIFICATION","_NET_WM_WINDOW_TYPE_POPUP_MENU","_NET_WM_WINDOW_TYPE_SPLASH","_NET_WM_WINDOW_TYPE_TOOLBAR","_NET_WM_WINDOW_TYPE_UTILITY","_NET_WM_DESKTOP","_NET_WM_NAME","_NET_WM_STATE","_NET_WM_STATE_DEMANDS_ATTENTION","_NET_WM_STATE_FULLSCREEN","_NET_WM_STATE_HIDDEN","_NET_WM_STRUT","_NET_WM_WINDOW_TYPE","UTF8_STRING","ATOM_WINDOW","WM_CLASS","WM_DELETE_WINDOW","WM_HINTS","WM_NAME","WM_NORMAL_HINTS","WM_PROTOCOLS","WM_STATE","WM_TAKE_FOCUS","WM_TRANSIENT_FOR","_XEMBED","_XEMBED_INFO","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Event masks used when sending client events","A client message that needs to be parsed and handled based â€¦","A message has been sent to a particular client","The raw data contained in a <code>ClientMessage</code>","Known common client message formats.","A configure request or notification when a client changes â€¦","Client config has changed in some way","A client is requesting to be repositioned","Inform a client that it is being closed","A client window has been closed","The mouse pointer has entered a new client window","A part or all of a client has become visible","A notification that a window has become visible","A client should have focus","A grabbed key combination has been entered by the user","The mouse pointer has left the current client window","A client window is requesting to be positioned and â€¦","Keybindings have changed","The mouse has moved or a mouse button has been pressed","No Mask: all clients should accept","A notification that the mouse pointer has entered or left â€¦","A property change on a known client","A client property has changed in some way","A randr action has occured (new outputs, resolution change â€¦","A window is requesting that it be resized","A client is being resized","Focus has moved to a different screen","Structure Notify","Substructure Notify","Request that a client take input focus","Take ownership of the systray","Slice of u16","Slice of u32","Slice of u8","A client is being unmapped","Inform an embedded window that it has gained focus","Inform an embedded window that it has been blocked by a â€¦","Inform a window that it is being embedded","Inform an embedded window that it is now active","Wrapper around the low level X event types that correspond â€¦","Absolute coordinate of the event","Build a default ClientMessage compatible with X11 / XCB â€¦","Convert this client message into a single data format","Convert this client message into a single data format","Convert this client message into a single data format","Convert this client message into a single data format","The property that changed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How many following expose events are pending","The raw data being sent in this message","The data type being set","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","The new height","The ID of the window that sent the message","The ID of the window that had a property changed","The ID of the window that has become exposed","The ID of the window that was entered","The ID of the window that had a property changed","The ID of the window that is being resized","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is this window the root window?","Is this window the root window?","The mask to use when sending the event","Try to build a new ClientMessage. Fails if the data is â€¦","The new window size","The current size and position of the window","Coordinate of the event relative to top-left of the window â€¦","Whether or not the event window is on the same screen as â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The new width","One or more X Atoms","Raw bytes for when the prop type is non-standard","A cardinal number","Class is copied from parent window","Icon mask hint is set","Icon pixmap hint is set","Icon position hint is set","Icon window hint is set","Input hint is set","Window is iconified","Window can only be used for queries","Window can be displayed","The mapping states a window can be in","Window is visible","Program-specified min and max aspect ratios","Program-specified base size","Program-specified maximum size","Program-specified minimum size","Program-specified position","Program-specified resize increments","Program-specified size","Program-specified window gravity","Know property types that should be returnable by XConn â€¦","State hint is set","Urgency hint is set","UTF-8 encoded string data","User-specified x, y","User-specified width, height","The window is never viewable","The window is unmapped","The window is currently viewable","Window group hint is set","An X window IDs","Window Attributes honoured by penose.","The input class for a window","Window is not visible","Client requested hints about information other than window â€¦","The WmHints properties for this window","Possible flags that can be set in a WmHints client property","Client requested hints about window geometry.","The WmNormalHints properties for this window","Possible flags that can be set in a WmNormalHints client â€¦","Possible valid values for setting the <code>WM_STATE</code> property on â€¦","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Apply these size hints to a given Rect.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags â€¦","The bitwise exclusive-or (<code>^</code>) of the bits in two flags â€¦","The bitwise exclusive-or (<code>^</code>) of the bits in two flags â€¦","The bitwise exclusive-or (<code>^</code>) of the bits in two flags â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, â€¦","The bitwise negation (<code>!</code>) of the bits in a flags value, â€¦","Whether all set bits in a source flags value are also set â€¦","Whether all set bits in a source flags value are also set â€¦","","","The intersection of a source flags value with the â€¦","The intersection of a source flags value with the â€¦","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given â€¦","Get a flags value with the bits of a flag with the given â€¦","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set â€¦","Whether any set bits in a source flags value are also set â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Create a new instance from component parts","Create a new instance from component parts","Create a new instance from component parts","The bitwise negation (<code>!</code>) of the bits in a flags value, â€¦","The bitwise negation (<code>!</code>) of the bits in a flags value, â€¦","The intersection of a source flags value with the â€¦","The intersection of a source flags value with the â€¦","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is â€¦","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is â€¦","The intersection of a source flags value with the â€¦","The intersection of a source flags value with the â€¦","The intersection of a source flags value with the â€¦","The intersection of a source flags value with the â€¦","The bitwise exclusive-or (<code>^</code>) of the bits in two flags â€¦","The bitwise exclusive-or (<code>^</code>) of the bits in two flags â€¦","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags â€¦","The bitwise exclusive-or (<code>^</code>) of the bits in two flags â€¦","","","","","","","","","","Try to construct a WmHints instance from raw bytes.","Try to construct a WmNormalHints instance from raw bytes.","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","A Query for fetching a windowâ€™s application name (the â€¦","A Query for fetching a windowâ€™s class name (the second â€¦","A query to be run against client windows for identifying â€¦","A Query for fetching a string property from a client â€¦","A Query for fetching a windowâ€™s title following ICCCM / â€¦","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Run this query for a given window ID.","","","","","","","","","","","","","","","","","","","",""],"i":[10,0,10,24,0,10,10,10,10,10,10,10,10,10,24,10,10,0,10,10,10,10,10,10,10,10,10,10,0,1,1,4,10,1,4,10,1,0,4,1,4,1,4,0,0,4,4,4,1,0,4,4,10,10,1,4,4,10,10,10,10,10,10,10,10,1,1,1,1,4,1,0,4,10,1,0,0,1,4,0,1,1,1,1,0,10,0,4,1,4,10,4,10,1,1,1,4,10,1,4,10,1,0,0,0,168,169,170,171,172,172,173,174,171,175,176,171,177,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,39,40,41,42,39,40,41,42,39,39,41,42,39,40,41,42,39,40,39,40,41,42,39,40,41,42,39,40,42,39,40,41,42,39,40,41,42,39,40,41,42,40,40,39,40,41,42,39,40,41,42,0,39,40,41,42,39,39,39,39,40,41,42,39,0,39,40,41,42,39,40,41,42,39,40,41,42,40,40,0,0,0,0,0,0,0,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,45,46,47,48,49,50,51,0,0,0,0,52,53,54,55,52,53,54,55,52,53,54,55,52,53,54,55,52,53,54,55,52,53,54,55,52,53,54,55,52,53,54,55,52,53,54,55,54,52,53,54,55,52,53,54,55,54,55,52,53,54,55,52,53,54,55,52,53,54,55,54,55,52,53,54,55,52,53,54,54,55,55,52,52,53,53,54,54,55,52,53,54,55,52,53,54,55,52,53,54,55,52,53,54,55,52,53,54,55,0,0,0,0,0,0,34,57,0,58,58,34,57,58,34,57,34,58,58,58,58,58,34,34,58,58,58,34,34,58,58,34,57,58,58,58,34,57,0,58,34,57,0,58,58,34,57,58,58,34,34,57,58,57,58,58,34,57,58,34,57,58,34,57,77,74,77,74,74,74,0,0,0,0,0,0,74,76,77,76,0,0,79,0,0,0,0,0,0,74,74,79,79,74,74,76,76,76,77,74,74,74,74,75,76,77,78,71,79,73,74,75,76,77,78,71,79,73,71,71,26,178,74,75,76,77,78,71,79,73,74,75,76,77,78,71,79,73,77,75,74,75,76,77,71,79,73,74,75,76,77,78,71,79,73,74,75,76,77,78,71,79,73,71,75,76,77,71,79,73,73,75,74,75,76,77,78,71,79,73,78,77,0,73,78,71,75,71,71,73,78,78,78,0,77,73,78,73,74,75,76,77,78,71,79,73,74,74,75,76,76,77,77,78,71,79,73,74,75,76,77,78,71,79,73,74,75,76,77,78,71,79,73,73,0,0,0,0,0,0,0,0,88,89,90,91,88,89,90,91,59,61,62,60,59,61,62,88,89,90,88,89,90,91,88,89,90,91,88,89,90,91,59,61,62,60,59,61,62,60,60,91,60,91,88,89,90,91,88,89,90,91,88,89,90,91,0,0,0,0,0,43,43,38,38,92,92,92,43,43,43,38,92,92,179,43,93,93,38,92,38,92,38,92,38,92,179,179,92,179,179,179,179,179,179,179,179,179,43,43,43,179,179,0,0,0,0,95,0,95,95,95,95,95,95,95,0,0,0,95,95,0,95,95,0,95,0,0,95,0,95,95,95,0,0,0,0,0,0,0,0,0,0,0,0,0,98,98,98,98,98,98,98,98,98,98,98,98,98,0,0,0,0,0,0,0,0,0,0,0,99,100,101,102,103,99,100,101,102,103,99,100,101,102,103,99,100,101,102,103,99,100,101,102,103,99,100,101,102,103,101,102,99,100,101,102,103,99,100,101,102,103,99,100,101,102,103,0,0,0,0,104,105,104,105,105,105,105,105,0,104,105,104,105,104,105,0,104,105,104,105,104,105,104,105,0,108,108,108,108,108,108,108,108,108,108,108,108,108,108,0,109,109,109,109,109,109,109,109,109,109,0,0,0,110,111,112,110,111,112,110,111,112,110,111,112,111,111,112,111,112,111,112,110,111,112,110,111,112,110,111,112,110,111,112,110,111,112,110,111,112,110,111,112,111,112,110,111,112,110,111,112,110,111,112,113,113,113,0,113,113,113,113,113,0,0,113,113,113,113,113,0,0,113,113,113,113,113,0,0,0,115,116,115,116,115,115,116,115,116,115,116,116,115,116,116,116,116,115,116,115,116,116,116,116,0,115,116,115,116,115,116,115,116,0,0,0,118,0,118,119,119,118,96,118,119,96,117,118,119,96,117,117,118,119,96,117,118,119,96,117,96,96,96,119,96,118,119,96,117,118,119,96,117,96,118,119,96,117,96,96,117,96,117,96,96,96,118,119,96,117,118,119,96,117,118,119,96,117,118,119,96,117,96,114,127,127,114,127,127,114,0,0,114,0,0,0,127,0,120,120,126,127,44,120,124,114,126,127,44,120,124,114,44,124,120,124,126,127,44,120,124,114,126,127,44,120,124,114,44,120,124,120,120,120,120,120,120,120,126,127,44,120,124,120,120,127,44,114,44,44,44,120,126,126,127,44,44,120,124,124,114,124,120,44,120,44,44,44,120,120,120,44,120,44,126,127,44,120,124,114,44,0,126,44,124,120,44,120,120,120,124,126,44,120,44,120,126,127,44,120,124,114,44,44,44,44,124,44,44,120,44,124,44,44,120,120,120,120,120,120,44,124,120,124,120,120,120,120,120,120,120,124,120,120,44,120,44,120,44,44,120,44,120,44,120,44,120,120,120,124,120,124,120,44,120,44,120,44,120,124,120,120,120,126,127,44,120,124,114,126,44,124,120,126,127,44,120,124,114,44,126,127,44,120,124,114,120,126,127,44,120,124,114,44,120,120,126,120,120,120,0,0,0,0,130,130,33,33,131,130,33,131,130,33,33,131,130,33,131,130,33,33,33,33,131,130,33,131,130,33,131,130,33,131,131,131,131,131,130,33,130,33,131,33,131,130,33,33,33,131,130,33,180,130,33,33,33,33,33,33,33,33,33,33,33,33,131,130,33,131,130,33,131,130,33,131,130,33,33,131,33,131,33,0,0,0,0,0,0,0,137,136,135,0,0,137,137,135,135,136,0,0,137,136,136,136,136,0,0,0,0,0,181,0,35,135,136,137,135,136,137,35,181,181,135,136,137,135,136,137,35,35,135,136,137,0,35,35,135,136,137,35,135,136,137,35,35,35,35,135,136,137,181,35,135,136,137,35,181,35,181,35,181,35,181,181,0,0,181,181,181,181,181,35,35,35,181,35,181,35,181,35,35,135,136,137,135,136,137,135,136,137,135,136,137,181,35,35,181,181,181,181,0,0,142,142,142,142,142,0,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,0,0,145,0,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,146,145,146,145,146,145,146,145,145,146,145,146,145,145,145,146,146,145,146,146,146,146,146,145,146,145,145,146,145,146,145,146,0,0,63,0,0,0,63,63,147,63,63,63,0,63,63,63,63,63,63,149,0,0,63,63,63,0,63,149,149,147,147,148,148,148,63,147,147,147,147,0,152,147,148,148,148,148,153,63,147,149,148,141,150,151,152,153,154,63,147,149,148,141,150,151,152,153,154,63,147,149,148,141,150,151,152,153,154,63,147,149,148,141,150,151,152,153,154,151,141,141,63,147,149,148,141,150,151,152,153,154,63,63,147,149,148,141,150,151,152,153,154,63,147,149,148,148,148,148,148,148,148,141,150,151,152,153,154,63,147,149,148,141,150,151,152,153,154,154,141,150,151,152,153,154,63,147,149,148,141,150,151,152,153,154,150,153,141,141,150,151,152,152,63,147,149,148,141,150,151,152,153,154,63,63,147,149,148,148,148,148,141,150,151,152,153,154,63,147,149,148,141,150,151,152,153,154,63,147,149,148,141,150,151,152,153,154,154,134,134,134,160,156,156,156,156,156,139,160,160,0,139,157,157,157,157,157,157,157,157,0,156,156,134,157,157,159,159,159,156,134,0,0,139,0,134,0,0,134,0,0,156,157,158,156,157,156,157,156,157,156,157,156,156,157,157,156,157,156,157,134,156,157,139,159,160,161,158,138,134,156,157,139,159,160,161,158,138,134,156,157,139,159,160,161,158,138,134,156,157,139,159,160,161,158,138,156,157,156,157,156,157,156,157,156,157,134,156,157,139,159,160,161,158,138,156,157,134,156,156,156,156,156,157,157,157,157,157,139,159,160,161,158,138,134,156,157,139,159,160,161,158,138,156,157,156,156,157,157,156,157,156,157,156,157,134,156,157,139,159,160,161,158,138,156,157,156,157,156,157,134,156,157,139,159,160,161,158,138,156,157,156,157,156,157,156,157,156,157,161,158,138,156,157,156,157,156,157,156,157,156,157,156,157,134,156,157,139,159,160,161,158,138,156,157,134,156,157,139,159,160,161,158,138,161,158,134,156,157,139,159,160,161,158,138,134,156,157,139,159,160,161,158,138,156,157,0,0,0,0,0,164,165,166,167,164,165,166,167,164,165,166,167,164,165,166,167,164,165,166,167,164,165,166,167,164,165,166,167,164,165,166,167,107,164,165,166,167,164,165,166,167,164,165,166,167,164,165,166,167,164,165,166,167],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[4,4],[1,1],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[4,4],6],0,0,[[],4],[4],[[4,4],7],[[1,1],7],0,[[4,8],9],[[4,8],9],[[10,8],9],[[10,8],9],[[1,8],9],[2,4],[-1,-1,[]],[-1,-1,[]],[11,10],[12,10],[13,10],[14,10],[15,10],[16,10],[17,10],[[[5,[18,18,18,18]]],1],[[[5,[18,18,18]]],1],[2,1],[-1,-1,[]],[[4,-1],5,19],[[1,-1],5,19],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[2,1],[[4,4],[[20,[6]]]],0,[1,[[5,[18,18,18]]]],[1,2],[1,[[5,[18,18,18,18]]]],[1,2],0,[10,[[20,[21]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,3,[]],[-1,3,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[23,[[24,[1]]]],[3,[[24,[1]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[27,[26]]],28],[[],[[27,[26]]]],0,[-1,[[27,[26]]],29],[[],[[27,[26]]]],[-1,[[27,[26]]],[29,30]],[[],[[27,[26]]]],[-1,[[27,[26]]],28],[23,[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],[[31,31],[[27,[26]]]],[[31,31],[[27,[26]]]],[[],[[27,[26]]]],[[],[[27,[26]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[32,32],[[-1,-2],5,[],[]],[[],32],[[32,8],9],[-1,-1,[]],0,[-1,-2,[],[]],0,[-1,-2,[],[]],0,[[32,33,[34,[-1]],-1],33,35],[[32,33,[36,[[5,[4,33]]]],[34,[-1]],-1],[[36,[[5,[4,33]]]]],35],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,37,37],[[27,[38]]]],[[2,37,37,7],39],[[],[[27,[38]]]],[[],[[27,[38]]]],[39,[[27,[38]]]],[40,[[27,[38]]]],[41,[[27,[38]]]],[42,[[27,[38]]]],[[],[[27,[38]]]],[[],[[27,[38]]]],[39,39],[40,40],[41,41],[42,42],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],39],[[],40],[[],42],[[39,8],9],[[40,8],9],[[41,8],9],[[42,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[39,43],[[20,[[27,[38]]]]]],[[40,43],[[20,[[27,[38]]]]]],[[41,43],[[20,[[27,[38]]]]]],[[42,43],[[20,[[27,[38]]]]]],[[2,37,37],[[27,[38]]]],[[2,37,37],40],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[39,[44,[4]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]]],[[40,[44,[4]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]]],[[41,[44,[4]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]]],[[42,[44,[4]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]]],0,[39,3],[40,3],[41,3],[42,3],[[2,37,37],[[27,[38]]]],[[2,37,37],[[27,[38]]]],[[2,37,37,7],39],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,37,37],[[27,[38]]]],0,[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[2,37,37],[[27,[38]]]],[[2,37,37],40],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[45,45],7],[[46,46],7],[[47,47],7],[[48,48],7],[[49,49],7],[[50,50],7],[[51,51],7],[[45,8],9],[[46,8],9],[[47,8],9],[[48,8],9],[[49,8],9],[[50,8],9],[[51,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[38]]],[]],[-1,[[27,[38]]],[]],[-1,[[27,[38]]],[]],[-1,[[27,[38]]],[]],[52,52],[53,53],[54,54],[55,55],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[52,8],9],[[53,8],9],[[54,8],9],[[55,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,43],[[20,[[27,[38]]]]],[]],[[-1,43],[[20,[[27,[38]]]]],[]],[[-1,43],[[20,[[27,[38]]]]],[]],[[-1,43],[[20,[[27,[38]]]]],[]],[52,[[27,[38]]]],[53,[[27,[38]]]],[54,[[27,[38]]]],[55,[[27,[38]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[44,[4]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[]],[[-1,[44,[4]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[]],[[-1,[44,[4]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[]],[[-1,[44,[4]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[]],0,0,[[-1,33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[]],[[-1,33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[]],[[-1,33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[]],[[-1,33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[]],[[-1,23,[20,[[44,[4]]]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[]],[[-1,23,[20,[[44,[4]]]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[]],[[-1,23,[20,[[44,[4]]]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[]],[[-1,23,[20,[[44,[4]]]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,33,[34,[-2]],-2],33,[],[]],[[-1,33,[34,[-2]],-2],33,[],[]],[[54,33],33],[[-1,33,[34,[-2]],-2],33,[],[]],[[-1,33,[34,[-2]],-2],33,[],[]],[[55,33],33],[[52,33,[36,[[5,[4,33]]]]],[[36,[[5,[4,33]]]]]],[[-1,33,[36,[[5,[4,33]]]],[34,[-2]],-2],[[36,[[5,[4,33]]]]],[],[]],[[-1,33,[36,[[5,[4,33]]]],[34,[-2]],-2],[[36,[[5,[4,33]]]]],[],[]],[[53,33,[36,[[5,[4,33]]]]],[[36,[[5,[4,33]]]]]],[[54,33,[36,[[5,[4,33]]]]],[[36,[[5,[4,33]]]]]],[[-1,33,[36,[[5,[4,33]]]],[34,[-2]],-2],[[36,[[5,[4,33]]]]],[],[]],[[-1,33,[36,[[5,[4,33]]]],[34,[-2]],-2],[[36,[[5,[4,33]]]]],[],[]],[52,3],[53,3],[54,3],[55,3],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[[27,[38]]],[[27,[38]]]],[[[27,[38]]],[[27,[38]]]],[[[27,[38]],2,2],[[27,[38]]]],[[[27,[38]],2],[[27,[38]]]],0,0,0,0,0,0,[[[34,[-1]],-2],5,35,56],[[[57,[-1]],-2],5,35,56],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[58,[-1]],-2],5,35,[[59,[-1]]]],[[[58,[-1]],-2],5,35,[[60,[-1]]]],[[[58,[-1]],-2],5,35,[[61,[-1]]]],[[[58,[-1]],-2],5,35,[[62,[-1]]]],[[[58,[-1]],-2],5,35,[[62,[-1]]]],0,[[[34,[-1]]],[[20,[63]]],35],[[],[[58,[-1]]],35],0,0,[[[34,[-1]]],[[24,[[65,[[64,[-2]]]]]]],35,56],[[[34,[-1]]],[[65,[[64,[-2]]]]],35,[66,56]],0,[[[58,[-1]],8],9,35],[[[34,[-1]],8],9,[35,67]],[[[57,[-1]],8],9,[35,67]],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[[34,[-1]]],[[68,[4]]],35],[[[58,[-1]],[69,[-1]],[70,[-1]],-1],[[24,[[57,[-1]]]]],35],0,0,[[[34,[-1]]],[[20,[-2]]],35,56],[[[34,[-1]]],4,35],[[[57,[-1]]],[[24,[5]]],35],0,0,0,[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[71,72],0,[[-1,[34,[-2]],-2],[[24,[5]]],[],[]],[[-1,73,[34,[-2]],-2],[[24,[5]]],[],[]],[74,74],[75,75],[76,76],[77,77],[78,78],[71,71],[79,79],[73,73],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[77,77],6],0,[[74,74],7],[[75,75],7],[[76,76],7],[[77,77],7],[[71,71],7],[[79,79],7],[[73,73],7],[[74,8],9],[[75,8],9],[[76,8],9],[[77,8],9],[[78,8],9],[[71,8],9],[[79,8],9],[[73,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[72,80],[[24,[71]]]],[[75,-1],5,19],[[76,-1],5,19],[[77,-1],5,19],[[71,-1],5,19],[[79,-1],5,19],[[73,-1],5,19],0,[[75,81],75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],78],[[],[[24,[[82,[3,72]]]]]],0,[78,83],[71,80],0,0,[[76,[36,[77]]],71],[[4,84,84,84,84,71,79],73],[78,20],[78,20],[[78,83],20],[[[82,[-1,[27,[26]]]]],[[24,[[69,[-2]]]]],[[85,[23]]],35],[[77,77],[[20,[6]]]],0,[78,[[5,[83,[20,[83]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[86,[[22,[74]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[72,[[24,[76]]]],[23,[[22,[77]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[59]]],87],[-1,[[27,[61]]],87],[-1,[[27,[62]]],87],[-1,[[27,[60]]],87],[[-1,63,[34,[-2]],-2],[[24,[7]]],[],[]],[[-1,4,[34,[-2]],-2],[[24,[5]]],[],[]],[[-1,[34,[-2]],-2],[[24,[5]]],[],[]],[[[88,[-1]],63,[34,[-1]],-1],[[24,[7]]],35],[[[89,[-1]],4,[34,[-1]],-1],[[24,[5]]],35],[[[90,[-1]],[34,[-1]],-1],[[24,[5]]],35],[[[88,[-1]],8],9,[35,67]],[[[89,[-1]],8],9,[35,67]],[[[90,[-1]],8],9,[35,67]],[[[91,[-1]],8],9,[35,67]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-3],[[88,[-2]]],87,[],[[59,[-2]]]],[[-1,-3],[[89,[-2]]],87,[],[[61,[-2]]]],[[-1,-3],[[90,[-2]]],87,[],[[62,[-2]]]],[[-1,-3],[[91,[-2]]],87,[],[[60,[-2]]]],[[-1,[27,[59]]],[[27,[59]]],87],[[-1,[27,[61]]],[[27,[61]]],87],[[-1,[27,[62]]],[[27,[62]]],87],[[-1,[27,[60]]],[[27,[60]]],87],[[-1,33,[34,[-2]],-2],33,[],[]],[[[91,[-1]],33,[34,[-1]],-1],33,35],[[-1,33,[36,[[5,[4,33]]]],[34,[-2]],-2],[[36,[[5,[4,33]]]]],[],[]],[[[91,[-1]],33,[36,[[5,[4,33]]]],[34,[-1]],-1],[[36,[[5,[4,33]]]]],35],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[38]]],87],[-1,[[27,[38]]],[]],[92,[[27,[38]]]],[[92,-1],5,93],[[],92],[43,[[20,[-1]]],[]],[[43,8],9],[-1,-1,[]],[[-1,43],[[20,[[27,[38]]]]],[]],[[92,-1],5,93],[[92,43],[[20,[[27,[38]]]]]],[-1,[[27,[38]]],[]],[-1,-2,[],[]],[-1,43,87],[-1,43,87],[[-1,[44,[4]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[]],[[92,[44,[4]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]]],[[-1,33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[]],[[92,33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]]],[[-1,23,[20,[[44,[4]]]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[]],[[92,23,[20,[[44,[4]]]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]]],[-1,3,[]],[92,3],[[-1,43],[[20,[[27,[38]]]]],[]],[[-1,43],[[20,[[27,[38]]]]],[]],[[92,-1],[[36,[[5,[4,33]]]]],94],[[-1,-2,33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[],94],[[-1,-2,33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]],[],94],[[-1,[27,[38]]],[[27,[38]]],[]],[[-1,[27,[38]]],[[27,[38]]],[]],[[-1,33],33,[]],[[-1,33],33,[]],[[-1,33,[36,[[5,[4,33]]]]],[[36,[[5,[4,33]]]]],[]],[[-1,33,[36,[[5,[4,33]]]]],[[36,[[5,[4,33]]]]],[]],[-1,3,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,[[27,[38]]],[]],[-1,[[27,[38]]],[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[95,95],[[-1,-2],5,[],[]],[[95,95],6],[92,[[27,[26]]]],[96,[[27,[26]]]],[96,[[27,[26]]]],[[95,95],7],[[95,8],9],[[23,23],[[27,[26]]]],[-1,-1,[]],[-1,-2,[],[]],[96,[[27,[26]]]],[[95,95],[[20,[6]]]],[[4,95,[34,[-1]],-1],[[24,[5]]],35],[[],[[27,[26]]]],[-1,-2,[],[]],[[],[[27,[26]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,[36,[-3]]],[[27,[62]]],[[97,[3]]],[[97,[3]]],[[97,[3]]]],[[98,[34,[-1]],-1],[[24,[5]]],35],[98,98],[[-1,-2],5,[],[]],[[98,8],9],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],0,0,[[[58,[-1]]],[[58,[-1]]],35],[[63,[34,[-1]],-1],[[24,[7]]],35],[[[34,[-1]],-1],[[24,[5]]],35],[[[34,[-1]],-1],[[24,[5]]],35],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[99,4,[34,[-1]],-1],[[24,[5]]],35],[[100,4,[34,[-1]],-1],[[24,[5]]],35],[[101,4,[34,[-1]],-1],[[24,[5]]],35],[[102,4,[34,[-1]],-1],[[24,[5]]],35],[[103,4,[34,[-1]],-1],[[24,[5]]],35],[[99,8],9],[[100,8],9],[[101,8],9],[[102,8],9],[[103,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[18,18],101],[[18,18,18,18],102],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,[[[57,[-1]],[36,[[104,[-1]]]]],[[57,[-1]]],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[105,[34,[-1]],-1],[[24,[5]]],35],[105,105],[[-1,-2],5,[],[]],[[105,105],7],[[63,[34,[-1]],-1],[[24,[7]]],35],[[[104,[-1]],8],9,35],[[105,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,[34,[-1]],-1],[[24,[5]]],35],[[-1,-2,-4,-5,7],[[5,[[104,[-3]],105]]],[[97,[[106,[23]]]]],[[97,[[106,[23]]]]],35,[[107,[-3]]],[[61,[-3]]]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[62]]],[[97,[[106,[23]]]]]],[[108,[34,[-1]],-1],[[24,[5]]],35],[108,108],[[-1,-2],5,[],[]],[[108,108],7],[[108,8],9],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-2,[[27,[59]]],35,[[107,[-1]]]],[[[109,[-1]],63,[34,[-1]],-1],[[24,[7]]],35],[[[109,[-1]],8],9,[67,35]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,-3],[[27,[38]]],[[97,[3]]],38,38],[[2,37,37],[[27,[38]]]],[[37,37],[[27,[38]]]],[110,[[27,[38]]]],[111,[[27,[38]]]],[112,[[27,[38]]]],[[],[[27,[38]]]],[111,111],[112,112],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],111],[[],112],[[110,8],9],[[111,8],9],[[112,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[110,43],[[20,[[27,[38]]]]]],[[111,43],[[20,[[27,[38]]]]]],[[112,43],[[20,[[27,[38]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[110,[44,[4]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]]],[[111,[44,[4]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]]],[[112,[44,[4]],33],[[5,[[20,[[27,[38]]]],[36,[[5,[4,33]]]]]]]],[110,3],[111,3],[112,3],[[-1,-2,-3],110,[[97,[3]]],38,38],[[2,37,37],111],[[37,37],112],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[113,113],[[-1,-2],5,[],[]],[[113,113],6],0,0,[[113,113],7],[[113,8],9],[-1,-1,[]],[[113,-1],5,19],[-1,-2,[],[]],[[-1,-2],[[24,[5]]],[[85,[23]]],[[85,[23]]]],[[-1,-2,113,83],[[24,[5]]],[[85,[23]]],[[85,[23]]]],[[113,113],[[20,[6]]]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[[23,23,114],[[24,[5]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[115,[34,[-1]],-1],[[24,[5]]],35],[115,115],[116,116],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],115],[[],116],[[116,116],7],[[115,8],9],[[116,8],9],0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[[34,[-1]],116],3,35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[117,[36,[-1]]],[[24,[118]]],[[97,[3]]]],[118,118],[119,119],[96,96],[117,117],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,[[],96],[[119,119],7],0,[[118,8],9],[[119,8],9],[[96,8],9],[[117,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[96,83],117],0,[117,[[24,[5]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[23,96],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[120,[-1]],-2],[[24,[5]]],[30,121,122,123],[[97,[3]]]],[[[120,[-1]],-2,92],[[24,[5]]],[30,121,122,123],[[97,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[44,[[27,[38]]]],-1],5,93],[[[124,[-1]],-2],5,[],93],[[[120,[-1]]],[[0,[125]]],[30,121,122,123]],[[[124,[-1]]],[[0,[125]]],[]],[[[126,[-1]]],[[126,[-1]]],30],[127,127],[[[44,[-1]]],[[44,[-1]]],30],[[[120,[-1]]],[[120,[-1]]],[30,121,122,123,30]],[[[124,[-1]]],[[124,[-1]]],30],[114,114],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[[44,[-1]],-1],7,121],[[[120,[-1]],-1],7,[30,121,122,123]],[[[124,[-1]],-1],7,121],[[[120,[-1]],23],7,[30,121,122,123]],[[[120,[-1]]],[[20,[-1]]],[30,121,122,123]],[[[120,[-1]]],[[126,[-1]]],[30,121,122,123]],[[[120,[-1]]],[[20,[[44,[-1]]]]],[30,121,122,123]],[[[120,[-1]]],23,[30,121,122,123]],[[[120,[-1]]],[[124,[-1]]],[30,121,122,123]],[[[120,[-1]]],[[124,[-1]]],[30,121,122,123]],[[],[[126,[-1]]],66],[[],127],[[],[[44,[-1]]],66],[[],[[120,[-1]]],[30,121,122,123,66]],[[],[[124,[-1]]],[]],[[[120,[-1]]],5,[30,121,122,123]],[[[120,[-1]]],5,[30,121,122,123]],[[127,127],7],[[[44,[-1]],[44,[-1]]],7,121],[[114,114],7],[[[44,[-1]],-2],[[5,[[20,[[44,[-1]]]],[36,[-1]]]]],30,28],[[[44,[-1]],-2],[[20,[[44,[-1]]]]],[],28],[[[44,[-1]]],[[36,[-1]]],[]],[[[120,[4]],4,33],[[24,[5]]]],[[[126,[-1]],8],9,67],[[[126,[-1]],8],9,128],[[127,8],9],[[[44,[-1]],8],9,67],[[[44,[-1]],8],9,128],[[[120,[-1]],8],9,[30,121,122,123,67]],[[[124,[-1]],8],9,128],[[[124,[-1]],8],9,67],[[114,8],9],[[[124,[-1]]],[[20,[-1]]],[]],[[[120,[-1]],-1],5,[30,121,122,123]],[[[44,[-1]]],[[44,[-1]]],[]],[[[120,[-1]]],5,[30,121,122,123]],[[[44,[-1]],-1],5,121],[[[44,[-1]],-2],5,[],28],[[[44,[-1]]],[[44,[-1]]],[]],[[[120,[-1]]],5,[30,121,122,123]],[[[120,[-1]],83],5,[30,121,122,123]],[[[120,[-1]],-2],5,[30,121,122,123],[[85,[23]]]],[[[44,[-1]]],[[44,[-1]]],[]],[[[120,[-1]]],5,[30,121,122,123]],[[[44,[-1]]],-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[44,[-1]],-2],[[20,[[44,[-1]]]]],30,28],0,[[[126,[-1]]],33,[]],[[[44,[[27,[38]]]],-1],5,93],[[[124,[-1]],-2],5,[],93],[[[120,[-1]],-2],7,[30,121,122,123],[[85,[23]]]],[[[44,[-1]]],-1,[]],[[[120,[-1]]],[[0,[125]]],[30,121,122,123]],[[[120,[-1]]],[[0,[125]]],[30,121,122,123]],[[[120,[-1]]],[[0,[125]]],[30,121,122,123]],[[[124,[-1]]],83,[]],[[[126,[-1]]],83,[]],[[[44,[-1]],-1],[[44,[-1]]],[]],[[[120,[-1]],-1],5,[30,121,122,123]],[[[44,[-1]],127,-1],[[44,[-1]]],[]],[[[120,[-1]],127,-1],5,[30,121,122,123]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[44,[-1]]],[[0,[-1]]],[]],[[[44,[-1]]],[[0,[-1]]],[]],[[[44,[-1]]],[[0,[-1]]],[]],[[[44,[-1]]],7,[]],[[[124,[-1]]],7,[]],[[[44,[-1]]],[[0,[-1]]],[]],[[[44,[-1]]],[[0,[-1]]],[]],[[[120,[-1]]],5,[30,121,122,123]],[[[44,[-1]]],-1,[]],[[[124,[-1]]],3,[]],[[[44,[-1]]],83,[]],[[[44,[-1]],-2],[[44,[-3]]],[],28,[]],[[[120,[-1]],-2],5,[30,121,122,123],94],[[[120,[-1]],-2],5,[30,121,122,123],94],[[[120,[-1]],-1],5,[30,121,122,123]],[[[120,[-1]],-1,-2],5,[30,121,122,123],[[85,[23]]]],[[[120,[-1]],83],5,[30,121,122,123]],[[[120,[-1]],-2],5,[30,121,122,123],[[85,[23]]]],[[-1,-2,-3],[[44,[-2]]],129,[],129],[[83,-1,92,[20,[[44,[-2]]]]],[[124,[-2]]],[[97,[3]]],[]],[[[120,[-1]]],5,[30,121,122,123]],[[[124,[-1]]],5,[]],[[[120,[-1]]],5,[30,121,122,123]],[[[120,[-1]]],[[0,[125]]],[30,121,122,123]],[[[120,[-1]]],[[0,[125]]],[30,121,122,123]],[[[120,[-1]]],[[0,[125]]],[30,121,122,123]],[[[120,[-1]]],[[36,[3]]],[30,121,122,123]],[[[120,[-1]]],[[0,[125]]],[30,121,122,123]],[[[120,[-1]]],5,[30,121,122,123]],[[[124,[-1]]],5,[]],[[[120,[-1]]],5,[30,121,122,123]],[[[120,[-1]],-2],5,[30,121,122,123],[[85,[23]]]],[[[44,[-1]],-1],[[5,[[20,[-1]],[20,[[44,[-1]]]]]]],121],[[[120,[-1]],-1],[[20,[-1]]],[30,121,122,123]],[[[44,[-1]]],[[5,[-1,[20,[[44,[-1]]]]]]],[]],[[[120,[-1]]],[[20,[-1]]],[30,121,122,123]],[[[44,[-1]]],[[44,[-1]]],[]],[[[44,[-1]]],[[44,[-1]]],[]],[[[120,[-1]]],5,[30,121,122,123]],[[[44,[-1]]],[[44,[-1]]],[]],[[[120,[-1]]],5,[30,121,122,123]],[[[44,[-1]]],[[44,[-1]]],[]],[[[120,[-1]]],5,[30,121,122,123]],[[[44,[[27,[38]]]],-1],[[36,[[5,[4,33]]]]],94],[[[120,[-1]],-1],[[20,[[126,[-1]]]]],[30,121,122,123]],[[[120,[-1]]],[[0,[125]]],[30,121,122,123]],[[[120,[-1]]],[[0,[125]]],[30,121,122,123]],[[[124,[-1]],92],92,[]],[[[120,[-1]],-2],5,[30,121,122,123],[[85,[23]]]],[[[124,[-1]],23],5,[]],[[[120,[-1]],-1],[[20,[33]]],[30,121,122,123]],[[[44,[-1]]],[[44,[-1]]],[]],[[[120,[-1]]],5,[30,121,122,123]],[[[44,[-1]]],[[44,[-1]]],[]],[[[120,[-1]]],5,[30,121,122,123]],[[[44,[-1]]],[[44,[-1]]],[]],[[[120,[-1]]],5,[30,121,122,123]],[[[124,[-1]]],23,[]],[[[120,[-1]],-1],[[20,[23]]],[30,121,122,123]],[[[120,[-1]],83],[[20,[23]]],[30,121,122,123]],[[[120,[-1]],83],[[20,[3]]],[30,121,122,123]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,3,[]],[-1,3,[]],[-1,3,[]],[[[120,[-1]]],5,[30,121,122,123]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[20,[[44,[-2]]]]],129,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[[92,-1,-2],[[24,[[120,[-3]]]]],129,129,[30,121,122,123]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[[44,[-1]]],[[0,[125]]],[]],[[[120,[-1]],-2,-3],-2,[30,121,122,123],[],28],[[[120,[-1]],23],[[20,[[124,[-1]]]]],[30,121,122,123]],0,[[[120,[-1]],23],[[20,[[124,[-1]]]]],[30,121,122,123]],[[[120,[-1]]],[[0,[125]]],[30,121,122,123]],[[[120,[-1]]],[[0,[125]]],[30,121,122,123]],0,0,0,0,[[130,33],33],[[130,33,-1],130,28],[[33,2],[[36,[33]]]],[[33,2],[[36,[33]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[33,33],[[20,[33]]]],[131,131],[130,130],[33,33],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[33,33],7],[[33,-1],7,[[97,[131]]]],[33,[[5,[131,131,131,131]]]],[[],131],[[],130],[[],33],[[131,131],7],[[130,130],7],[[33,33],7],[[131,8],9],[[130,8],9],[[33,8],9],[33,131],[33,131],[[[5,[2,2]]],131],[[[5,[2,2]]],131],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],130],0,[[131,-1],5,19],[[33,-1],5,19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[33,33],7],[33,131],[[2,2],131],[[18,18,18,18],130],[[2,2,2,2],33],[[-1,33],130,[]],[[130,33],130],[[33,33],130],[[33,31,31],5],[[33,31,31],5],[[33,18],33],[[33,18],33],[[33,2],33],[[33,2],[[20,[[5,[33,33]]]]]],[[33,37],[[20,[[5,[33,33]]]]]],[33,[[5,[33,33]]]],[33,[[5,[33,33]]]],[[33,2],[[20,[[5,[33,33]]]]]],[[33,37],[[20,[[5,[33,33]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,0,[23,[[132,[5]]]],[[-1,2,2,2],5,38],[-1,[[24,[5]]],[[97,[3]]]],[-1,[[132,[3]]],[[97,[3]]]],[[-1,[133,[23]]],[[132,[3]]],[[97,[3]]]],[[-1,[133,[23]]],[[24,[5]]],[[97,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,4],[[24,[[82,[3,134]]]]],[]],0,[[-1,4],[[24,[3]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,4],[[24,[33]]],[]],[[-1,4,[133,[3]]],[[24,[7]]],[]],[[-1,4,23],[[24,[7]]],[]],[135,135],[136,136],[137,137],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[-1,[[24,[131]]],[]],[[-1,4,23],[[24,[5]]],[]],[[135,135],7],[[136,136],7],[[137,137],7],0,[-1,[[24,[[36,[4]]]]],[]],[-1,5,[]],[[135,8],9],[[136,8],9],[[137,8],9],[[-1,4],[[24,[5]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,4,23],[[24,[[20,[134]]]]],[]],[[-1,4],[[24,[138]]],[]],[[-1,4],[[24,[[20,[139]]]]],[]],[[-1,[133,[75]],[133,[71]]],[[24,[5]]],[]],[[135,-1],5,19],[[136,-1],5,19],[[137,-1],5,19],[[-1,4,[68,[4]],[82,[4,83]]],[[24,[5]]],[]],[[-1,23],[[24,[4]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,4],[[24,[5]]],[]],[[-1,[34,[-1]]],[[24,[5]]],[]],[[-1,4],[[24,[[36,[3]]]]],[]],[[-1,4,[34,[-1]]],[[24,[5]]],[]],[[-1,4],[[24,[5]]],[]],[[-1,[34,[-1]],-2],[[24,[5]]],[],29],[-1,[[24,[63]]],[]],[[-1,4,33],[[24,[5]]],[]],[[-1,2,[133,[[5,[4,33]]]]],[[24,[5]]],[]],0,0,[[-1,107,4],[[24,[7]]],[]],[[-1,7,107,4],7,[]],[[-1,[34,[-1]]],[[24,[5]]],[]],[[-1,-2],[[24,[5]]],[],125],[[-1,4,140,[68,[4]]],[[24,[5]]],[]],[-1,4,[]],[-1,[[24,[[36,[33]]]]],[]],[[-1,141],[[24,[5]]],[]],[[-1,4,[34,[-1]]],[[24,[5]]],[]],[[-1,4,[133,[137]]],[[24,[5]]],[]],[[-1,4,-2],[[24,[5]]],[],[[97,[1]]]],[[-1,4,[133,[136]]],[[24,[5]]],[]],[[-1,4,[58,[-1]]],[[24,[5]]],[]],[[-1,4,23,134],[[24,[5]]],[]],[[-1,4,139],[[24,[5]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[-1,4,[34,[-1]]],[[24,[5]]],[]],[[-1,4],[[24,[5]]],[]],[[-1,4,84,84],[[24,[5]]],[]],[[-1,[34,[-1]],83],[[24,[5]]],[]],[[-1,4],[[24,[5]]],[]],[[-1,4],[[20,[2]]],[]],[[-1,4],[[24,[3]]],[]],0,0,[[[142,[-1]],4],[[24,[3]]],143],[-1,-2,[],[]],[-1,-2,[],[]],[[[142,[-1]],4],[[24,[33]]],143],[[[142,[-1]]],-1,143],0,[[[142,[-1]],135,33,7],[[24,[4]]],143],[[[142,[-1]]],[[24,[131]]],143],[[[142,[-1]],4,23],[[24,[5]]],143],[[[142,[-1]],4],[[24,[5]]],143],[[[142,[-1]]],[[24,[[36,[4]]]]],143],[[[142,[-1]]],5,143],[[[142,[-1]],8],9,[67,143]],[[[142,[-1]],4],[[24,[5]]],143],[-1,-1,[]],[[[142,[-1]],4,23],[[24,[[20,[134]]]]],143],[[[142,[-1]],4],[[24,[138]]],143],[[[142,[-1]],4],[[24,[[20,[139]]]]],143],[[[142,[-1]],[133,[75]],[133,[71]]],[[24,[5]]],143],[[[142,[-1]],23],[[24,[4]]],143],[-1,-2,[],[]],[[[142,[-1]],4],[[24,[5]]],143],[[[142,[-1]],4],[[24,[[36,[3]]]]],143],[[[142,[-1]],4],[[24,[5]]],143],[[],[[24,[[142,[144]]]]]],[[[142,[-1]]],[[24,[63]]],143],[[[142,[-1]]],4,143],[[[142,[-1]]],[[24,[[36,[33]]]]],143],[[[142,[-1]],141],[[24,[5]]],143],[[[142,[-1]],4,[133,[137]]],[[24,[5]]],143],[[[142,[-1]],4,[133,[136]]],[[24,[5]]],143],[[[142,[-1]],4,23,134],[[24,[5]]],143],[[[142,[-1]],4,139],[[24,[5]]],143],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[[[142,[-1]],4],[[24,[5]]],143],[[[142,[-1]],4,84,84],[[24,[5]]],143],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[145,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[145,145],[146,146],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[145,145],7],[[145,8],9],[[146,8],9],[-1,-1,[]],[-1,-1,[]],[23,[[22,[145]]]],[[145,-1],5,19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],146],[146,83],[146,20],[146,20],[[146,83],20],[146,[[5,[83,[20,[83]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[23,[[22,[145]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[147,-1],[[24,[141]]],35],[148,[[36,[80]]]],[148,[[36,[2]]]],[148,[[36,[72]]]],[148,[[36,[83]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[63,63],[147,147],[149,149],[148,148],[141,141],[150,150],[151,151],[152,152],[153,153],[154,154],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,0,[[63,63],7],[[147,147],7],[[149,149],7],[[148,148],7],[[141,141],7],[[150,150],7],[[151,151],7],[[152,152],7],[[153,153],7],[[154,154],7],[[63,8],9],[[63,8],9],[[147,8],9],[[149,8],9],[[148,8],9],[[141,8],9],[[150,8],9],[[151,8],9],[[152,8],9],[[153,8],9],[[154,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[155,[72]]],148],[[[155,[80]]],148],[[[155,[72]]],148],[[[155,[2]]],148],[[[155,[80]]],148],[[[155,[2]]],148],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[63,-1],5,19],[[147,-1],5,19],[[149,-1],5,19],[[148,-1],5,19],[[141,-1],5,19],[[150,-1],5,19],[[151,-1],5,19],[[152,-1],5,19],[[153,-1],5,19],[[154,-1],5,19],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[4,149,-1,148],141,[[97,[3]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,3,[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[[[133,[80]]],[[22,[148]]]],[[[133,[72]]],[[22,[148]]]],[[[133,[2]]],[[22,[148]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],156],[[],157],[[158,33],33],[[156,156],156],[[157,157],157],[[156,156],5],[[157,157],5],[[156,156],156],[[157,157],157],[[156,156],5],[[157,157],5],[156,2],[156,2],[157,2],[157,2],[[156,156],156],[[157,157],157],[[156,156],5],[[157,157],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[134,134],[156,156],[157,157],[139,139],[159,159],[160,160],[161,161],[158,158],[138,138],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[156,156],[157,157],[[156,156],7],[[157,157],7],[[],156],[[],157],[[156,156],156],[[157,157],157],[[],156],[[],157],[[134,134],7],[[156,156],7],[[157,157],7],[[139,139],7],[[159,159],7],[[160,160],7],[[161,161],7],[[158,158],7],[[138,138],7],[[156,-1],5,129],[[157,-1],5,129],[[134,8],9],[[156,8],9],[[156,8],9],[[156,8],9],[[156,8],9],[[156,8],9],[[157,8],9],[[157,8],9],[[157,8],9],[[157,8],9],[[157,8],9],[[139,8],9],[[159,8],9],[[160,8],9],[[161,8],9],[[158,8],9],[[138,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[2,[[20,[156]]]],[2,[[20,[157]]]],[2,156],[2,156],[2,157],[2,157],[2,156],[2,157],[-1,156,129],[-1,157,129],[23,[[20,[156]]]],[23,[[20,[157]]]],[[134,-1],5,19],[[156,-1],5,19],[[157,-1],5,19],[[139,-1],5,19],[[159,-1],5,19],[[160,-1],5,19],[[161,-1],5,19],[[158,-1],5,19],[[138,-1],5,19],[[156,156],5],[[157,157],5],[[156,156],156],[[157,157],157],[[156,156],7],[[157,157],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[156],[157],[156,7],[157,7],[156,7],[157,7],[156,[[162,[156]]]],[157,[[162,[157]]]],[156,[[163,[156]]]],[157,[[163,[157]]]],[[156,7,139,2,4,131,2,2],161],[[157,[20,[33]],[20,[33]],[20,[33]],[20,[33]]],158],[[7,159,160],138],[156,156],[157,157],[[156,156],5],[[157,157],5],[[156,156,7],5],[[157,157,7],5],[[156,156],156],[[157,157],157],[[156,156],5],[[157,157],5],[[156,156],156],[[157,157],157],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[156,156],5],[[157,157],5],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[[[133,[2]]],[[24,[161]]]],[[[133,[2]]],[[24,[158]]]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[[156,156],156],[[157,157],157],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[164,164],[165,165],[166,166],[167,167],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[164,164],7],[[165,165],7],[[166,166],7],[[167,167],7],[[164,8],9],[[165,8],9],[[166,8],9],[[167,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,4,-2],[[24,[7]]],[],[]],[[164,4,-1],[[24,[7]]],35],[[165,4,-1],[[24,[7]]],35],[[166,4,-1],[[24,[7]]],35],[[167,4,-1],[[24,[7]]],35],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,[[22,[-2]]],[],[]],[-1,25,[]],[-1,25,[]],[-1,25,[]],[-1,25,[]]],"c":[],"p":[[3,"Color",0],[15,"u32"],[3,"String",2184],[3,"Xid",0],[15,"tuple"],[4,"Ordering",2185],[15,"bool"],[3,"Formatter",2186],[6,"Result",2186],[4,"Error",0],[4,"ReplyOrIdError",2187],[3,"Error",2188],[4,"ConnectError",2189],[3,"FromUtf8Error",2184],[4,"ConnectionError",2187],[3,"ParseIntError",2190],[4,"ReplyError",2187],[15,"f64"],[8,"Hasher",2191],[4,"Option",2192],[8,"Error",2193],[4,"Result",2194],[15,"str"],[6,"Result",0],[3,"TypeId",2195],[8,"KeyEventHandler",495],[3,"Box",2196],[8,"Fn",2197],[8,"FnMut",2197],[8,"Clone",2198],[15,"i32"],[3,"SpacingHook",136],[3,"Rect",1342],[3,"State",431],[8,"XConn",1431],[3,"Vec",2199],[15,"f32"],[8,"Layout",727],[3,"MainAndStack",155],[3,"CenteredMain",155],[3,"Monocle",155],[3,"Grid",155],[3,"Message",727],[3,"Stack",1125],[3,"IncMain",238],[3,"ExpandMain",238],[3,"ShrinkMain",238],[3,"Rotate",238],[3,"Mirror",238],[3,"UnwrapTransformer",238],[3,"Hide",238],[3,"ReflectHorizontal",329],[3,"ReflectVertical",329],[3,"Gaps",329],[3,"ReserveTop",329],[8,"Any",2200],[3,"WindowManager",431],[3,"Config",431],[8,"EventHook",665],[8,"LayoutHook",665],[8,"ManageHook",665],[8,"StateHook",665],[4,"XEvent",1671],[3,"RefCell",2201],[3,"Arc",2202],[8,"Default",2203],[8,"Debug",2186],[3,"HashSet",2204],[6,"KeyBindings",495],[6,"MouseBindings",495],[3,"MouseState",495],[15,"u8"],[3,"MouseEvent",495],[4,"KeyPress",495],[3,"KeyCode",495],[4,"MouseButton",495],[4,"ModifierKey",495],[3,"ModifierKeyIter",495],[4,"MouseEventKind",495],[15,"u16"],[6,"KeyCodeMask",495],[3,"HashMap",2205],[15,"usize"],[15,"i16"],[8,"AsRef",2206],[4,"XKeySym",2207],[8,"Sized",2208],[3,"ComposedEventHook",665],[3,"ComposedManageHook",665],[3,"ComposedStateHook",665],[3,"ComposedLayoutHook",665],[6,"LayoutStack",727],[8,"IntoMessage",727],[8,"FnOnce",2197],[4,"FullScreenAction",778],[3,"DMenuConfig",1055],[8,"Into",2206],[3,"DefaultWorkspace",816],[3,"DefaultTiled",836],[3,"FloatingFixed",836],[3,"FloatingCentered",836],[3,"FloatingRelative",836],[3,"SetWorkspace",836],[3,"NamedScratchPad",888],[3,"ToggleNamedScratchPad",888],[4,"Cow",2209],[8,"Query",2126],[3,"SpawnOnStartup",916],[3,"WindowSwallowing",931],[3,"Conditional",942],[3,"Fibonacci",942],[3,"Tatami",942],[4,"NotifyLevel",996],[4,"RelativePosition",1125],[3,"NotfyState",1020],[3,"CurrentStateConfig",1020],[3,"DMenu",1055],[4,"MenuMatch",1055],[4,"DMenuKind",1055],[3,"StackSet",1125],[8,"PartialEq",2185],[8,"Eq",2185],[8,"Hash",2191],[3,"Workspace",1125],[8,"Iterator",2210],[3,"Screen",1125],[4,"Position",1125],[8,"Display",2186],[8,"IntoIterator",2211],[3,"RelativeRect",1342],[3,"Point",1342],[6,"Result",2188],[15,"slice"],[4,"Prop",1878],[4,"WinType",1431],[4,"ClientConfig",1431],[4,"ClientAttr",1431],[3,"WindowAttributes",1878],[4,"WmState",1878],[6,"ClientSet",431],[3,"ClientMessage",1671],[3,"Conn",1544],[8,"Connection",2212],[3,"RustConnection",2213],[4,"Atom",1584],[3,"AtomIter",1584],[4,"ClientMessageKind",1671],[4,"ClientMessageData",1671],[4,"ClientEventMask",1671],[3,"ConfigureEvent",1671],[3,"ExposeEvent",1671],[3,"PointerChange",1671],[3,"PropertyEvent",1671],[3,"ResizeRequestEvent",1671],[15,"array"],[3,"WmHintsFlags",1878],[3,"WmNormalHintsFlags",1878],[3,"WmNormalHints",1878],[4,"MapState",1878],[4,"WindowClass",1878],[3,"WmHints",1878],[3,"Iter",2214],[3,"IterNames",2214],[3,"Title",2126],[3,"AppName",2126],[3,"ClassName",2126],[3,"StringProperty",2126],[13,"UnknownMouseButton",105],[13,"InvalidClientMessage",105],[13,"InvalidHexColor",105],[13,"InvalidPropertyData",105],[13,"InsufficientWorkspaces",105],[13,"UnknownKeyName",105],[13,"UnknownModifier",105],[13,"InvalidHints",105],[13,"NonUniqueTags",105],[13,"UnknownStateExtension",105],[8,"MouseEventHandler",495],[8,"LayoutTransformer",727],[8,"RelativeTo",1342],[8,"XConnExt",1431]],"b":[[50,"impl-Display-for-Xid"],[51,"impl-Debug-for-Xid"],[52,"impl-Display-for-Error"],[53,"impl-Debug-for-Error"],[58,"impl-From%3CReplyOrIdError%3E-for-Error"],[59,"impl-From%3CError%3E-for-Error"],[60,"impl-From%3CConnectError%3E-for-Error"],[61,"impl-From%3CFromUtf8Error%3E-for-Error"],[62,"impl-From%3CConnectionError%3E-for-Error"],[63,"impl-From%3CParseIntError%3E-for-Error"],[64,"impl-From%3CReplyError%3E-for-Error"],[65,"impl-From%3C(f64,+f64,+f64,+f64)%3E-for-Color"],[66,"impl-From%3C(f64,+f64,+f64)%3E-for-Color"],[67,"impl-From%3Cu32%3E-for-Color"],[94,"impl-TryFrom%3C%26str%3E-for-Color"],[95,"impl-TryFrom%3CString%3E-for-Color"],[743,"impl-Stack%3CBox%3Cdyn+Layout%3E%3E"],[744,"impl-Layout-for-Stack%3CBox%3Cdyn+Layout%3E%3E"],[1194,"impl-Debug-for-Screen%3CC%3E"],[1195,"impl-Display-for-Screen%3CC%3E"],[1197,"impl-Debug-for-Stack%3CT%3E"],[1198,"impl-Display-for-Stack%3CT%3E"],[1200,"impl-Display-for-Workspace%3CT%3E"],[1201,"impl-Debug-for-Workspace%3CT%3E"],[1244,"impl-IntoIterator-for-Stack%3CT%3E"],[1245,"impl-IntoIterator-for-%26Stack%3CT%3E"],[1246,"impl-IntoIterator-for-%26mut+Stack%3CT%3E"],[1375,"impl-From%3C%26Rect%3E-for-Point"],[1376,"impl-From%3CRect%3E-for-Point"],[1377,"impl-From%3C(%26u32,+%26u32)%3E-for-Point"],[1378,"impl-From%3C(u32,+u32)%3E-for-Point"],[1771,"impl-Display-for-XEvent"],[1772,"impl-Debug-for-XEvent"],[1786,"impl-From%3C%5Bu8;+20%5D%3E-for-ClientMessageData"],[1787,"impl-From%3C%5Bu16;+10%5D%3E-for-ClientMessageData"],[1788,"impl-From%3C%26%5Bu8;+20%5D%3E-for-ClientMessageData"],[1789,"impl-From%3C%5Bu32;+5%5D%3E-for-ClientMessageData"],[1790,"impl-From%3C%26%5Bu16;+10%5D%3E-for-ClientMessageData"],[1791,"impl-From%3C%26%5Bu32;+5%5D%3E-for-ClientMessageData"],[1847,"impl-TryFrom%3C%26%5Bu16%5D%3E-for-ClientMessageData"],[1848,"impl-TryFrom%3C%26%5Bu8%5D%3E-for-ClientMessageData"],[1849,"impl-TryFrom%3C%26%5Bu32%5D%3E-for-ClientMessageData"],[1932,"impl-WmHintsFlags"],[1933,"impl-Flags-for-WmHintsFlags"],[1934,"impl-Flags-for-WmNormalHintsFlags"],[1935,"impl-WmNormalHintsFlags"],[1998,"impl-Octal-for-WmHintsFlags"],[1999,"impl-LowerHex-for-WmHintsFlags"],[2000,"impl-Binary-for-WmHintsFlags"],[2001,"impl-UpperHex-for-WmHintsFlags"],[2002,"impl-Debug-for-WmHintsFlags"],[2003,"impl-Binary-for-WmNormalHintsFlags"],[2004,"impl-Debug-for-WmNormalHintsFlags"],[2005,"impl-LowerHex-for-WmNormalHintsFlags"],[2006,"impl-UpperHex-for-WmNormalHintsFlags"],[2007,"impl-Octal-for-WmNormalHintsFlags"],[2025,"impl-WmHintsFlags"],[2026,"impl-Flags-for-WmHintsFlags"],[2027,"impl-Flags-for-WmNormalHintsFlags"],[2028,"impl-WmNormalHintsFlags"]]},\
"penrose_keysyms":{"doc":"Auto generated Keysym enum for use with xcb keycodes","tn":["XF86XK_AudioLowerVolume","XF86XK_AudioMicMute","XF86XK_AudioMute","XF86XK_AudioNext","XF86XK_AudioPlay","XF86XK_AudioPrev","XF86XK_AudioRaiseVolume","XF86XK_AudioStop","XF86XK_Calculator","XF86XK_DisplayOff","XF86XK_KbdBrightnessDown","XF86XK_KbdBrightnessUp","XF86XK_KbdLightOnOff","XF86XK_MonBrightnessCycle","XF86XK_MonBrightnessDown","XF86XK_MonBrightnessUp","XF86XK_Standby","XF86XK_TouchpadToggle","XK_0","XK_1","XK_2","XK_3","XK_3270_AltCursor","XK_3270_Attn","XK_3270_BackTab","XK_3270_Copy","XK_3270_CursorBlink","XK_3270_CursorSelect","XK_3270_DeleteWord","XK_3270_Duplicate","XK_3270_Enter","XK_3270_EraseEOF","XK_3270_EraseInput","XK_3270_ExSelect","XK_3270_FieldMark","XK_3270_Ident","XK_3270_Jump","XK_3270_KeyClick","XK_3270_Left2","XK_3270_PA1","XK_3270_PA2","XK_3270_PA3","XK_3270_Play","XK_3270_Quit","XK_3270_Record","XK_3270_Reset","XK_3270_Right2","XK_3270_Rule","XK_3270_Setup","XK_3270_Test","XK_4","XK_5","XK_6","XK_7","XK_8","XK_9","XK_A","XK_AE","XK_Aacute","XK_Abreve","XK_Abreveacute","XK_Abrevetilde","XK_Adiaeresis","XK_Alt_L","XK_Alt_R","XK_Amacron","XK_Aogonek","XK_Aring","XK_Atilde","XK_B","XK_BackSpace","XK_Begin","XK_Break","XK_C","XK_CH","XK_C_H","XK_C_h","XK_Cacute","XK_Cancel","XK_Caps_Lock","XK_Ccaron","XK_Ccedilla","XK_Ch","XK_Clear","XK_ColonSign","XK_Control_L","XK_Control_R","XK_CruzeiroSign","XK_D","XK_Dcaron","XK_Delete","XK_DongSign","XK_Down","XK_Dstroke","XK_E","XK_ENG","XK_ETH","XK_EZH","XK_Eacute","XK_Ecaron","XK_EcuSign","XK_Ediaeresis","XK_Emacron","XK_End","XK_Eogonek","XK_Escape","XK_Eth","XK_Etilde","XK_EuroSign","XK_Execute","XK_F","XK_F1","XK_F10","XK_F11","XK_F12","XK_F13","XK_F14","XK_F15","XK_F16","XK_F17","XK_F18","XK_F19","XK_F2","XK_F20","XK_F21","XK_F22","XK_F23","XK_F24","XK_F25","XK_F26","XK_F27","XK_F28","XK_F29","XK_F3","XK_F30","XK_F31","XK_F32","XK_F33","XK_F34","XK_F35","XK_F4","XK_F5","XK_F6","XK_F7","XK_F8","XK_F9","XK_FFrancSign","XK_Find","XK_G","XK_Gbreve","XK_Gcaron","XK_Gcedilla","XK_H","XK_Help","XK_Home","XK_Hstroke","XK_Hyper_L","XK_Hyper_R","XK_I","XK_ISO_Center_Object","XK_ISO_Continuous_Underline","XK_ISO_Discontinuous_Underline","XK_ISO_Emphasize","XK_ISO_Enter","XK_ISO_Left_Tab","XK_ISO_Level2_Latch","XK_ISO_Level3_Latch","XK_ISO_Level3_Lock","XK_ISO_Level3_Shift","XK_ISO_Level5_Latch","XK_ISO_Level5_Lock","XK_ISO_Level5_Shift","XK_ISO_Lock","XK_ISO_Partial_Space_Left","XK_ISO_Partial_Space_Right","XK_ISO_Set_Margin_Left","XK_ISO_Set_Margin_Right","XK_Iacute","XK_Ibreve","XK_Idiaeresis","XK_Imacron","XK_Insert","XK_Iogonek","XK_Itilde","XK_J","XK_K","XK_KP_0","XK_KP_1","XK_KP_2","XK_KP_3","XK_KP_4","XK_KP_5","XK_KP_6","XK_KP_7","XK_KP_8","XK_KP_9","XK_KP_Add","XK_KP_Begin","XK_KP_Decimal","XK_KP_Delete","XK_KP_Divide","XK_KP_Down","XK_KP_End","XK_KP_Enter","XK_KP_Equal","XK_KP_F1","XK_KP_F2","XK_KP_F3","XK_KP_F4","XK_KP_Home","XK_KP_Insert","XK_KP_Left","XK_KP_Multiply","XK_KP_Next","XK_KP_Page_Down","XK_KP_Page_Up","XK_KP_Prior","XK_KP_Right","XK_KP_Separator","XK_KP_Space","XK_KP_Subtract","XK_KP_Tab","XK_KP_Up","XK_Kcedilla","XK_Korean_Won","XK_L","XK_L1","XK_L10","XK_L2","XK_L3","XK_L4","XK_L5","XK_L6","XK_L7","XK_L8","XK_L9","XK_Lacute","XK_Lcaron","XK_Lcedilla","XK_Left","XK_Linefeed","XK_LiraSign","XK_Lstroke","XK_M","XK_Menu","XK_Meta_L","XK_Meta_R","XK_MillSign","XK_Mode_switch","XK_N","XK_Nacute","XK_NairaSign","XK_Ncaron","XK_Ncedilla","XK_NewSheqelSign","XK_Next","XK_Ntilde","XK_Num_Lock","XK_O","XK_OE","XK_Oacute","XK_Obarred","XK_Ocaron","XK_Odiaeresis","XK_Odoubleacute","XK_Omacron","XK_Ooblique","XK_Oslash","XK_Otilde","XK_P","XK_Page_Down","XK_Page_Up","XK_Pause","XK_PesetaSign","XK_Print","XK_Prior","XK_Q","XK_R","XK_R1","XK_R10","XK_R11","XK_R12","XK_R13","XK_R14","XK_R15","XK_R2","XK_R3","XK_R4","XK_R5","XK_R6","XK_R7","XK_R8","XK_R9","XK_Racute","XK_Rcaron","XK_Rcedilla","XK_Redo","XK_Return","XK_Right","XK_RupeeSign","XK_S","XK_SCHWA","XK_Sacute","XK_Scaron","XK_Scedilla","XK_Scroll_Lock","XK_Select","XK_Shift_L","XK_Shift_Lock","XK_Shift_R","XK_Super_L","XK_Super_R","XK_Sys_Req","XK_T","XK_Tab","XK_Tcaron","XK_Tcedilla","XK_Terminate_Server","XK_Tslash","XK_U","XK_Uacute","XK_Ubreve","XK_Udiaeresis","XK_Udoubleacute","XK_Umacron","XK_Undo","XK_Uogonek","XK_Up","XK_Uring","XK_Utilde","XK_V","XK_W","XK_Wacute","XK_Wdiaeresis","XK_WonSign","XK_X","XK_Y","XK_Yacute","XK_Ydiaeresis","XK_Ytilde","XK_Z","XK_Zacute","XK_Zcaron","XK_Zstroke","XK_a","XK_aacute","XK_abreve","XK_abreveacute","XK_abrevetilde","XK_acute","XK_adiaeresis","XK_ae","XK_amacron","XK_ampersand","XK_aogonek","XK_apostrophe","XK_approximate","XK_aring","XK_asciicircum","XK_asciitilde","XK_asterisk","XK_at","XK_atilde","XK_b","XK_backslash","XK_ballotcross","XK_bar","XK_blank","XK_botintegral","XK_botleftparens","XK_botleftsqbracket","XK_botrightparens","XK_botrightsqbracket","XK_bott","XK_braceleft","XK_braceright","XK_bracketleft","XK_bracketright","XK_breve","XK_brokenbar","XK_c","XK_c_h","XK_cacute","XK_careof","XK_caret","XK_caron","XK_ccaron","XK_ccedilla","XK_cedilla","XK_cent","XK_ch","XK_checkerboard","XK_checkmark","XK_club","XK_colon","XK_comma","XK_copyright","XK_cr","XK_crossinglines","XK_currency","XK_cursor","XK_d","XK_dagger","XK_dcaron","XK_decimalpoint","XK_degree","XK_diaeresis","XK_diamond","XK_digitspace","XK_division","XK_dollar","XK_doubbaselinedot","XK_doubleacute","XK_doubledagger","XK_doublelowquotemark","XK_downarrow","XK_downcaret","XK_downshoe","XK_downstile","XK_downtack","XK_dstroke","XK_e","XK_eacute","XK_ecaron","XK_ediaeresis","XK_ellipsis","XK_em3space","XK_em4space","XK_emacron","XK_emdash","XK_emfilledrect","XK_emopenrectangle","XK_emspace","XK_endash","XK_eng","XK_enspace","XK_eogonek","XK_equal","XK_eth","XK_etilde","XK_exclam","XK_exclamdown","XK_ezh","XK_f","XK_femalesymbol","XK_ff","XK_figdash","XK_fiveeighths","XK_fivesixths","XK_fourfifths","XK_function","XK_g","XK_gbreve","XK_gcaron","XK_gcedilla","XK_grave","XK_greater","XK_greaterthanequal","XK_guillemotleft","XK_guillemotright","XK_h","XK_hairspace","XK_heart","XK_hexagram","XK_horizconnector","XK_hstroke","XK_ht","XK_hyphen","XK_i","XK_iacute","XK_ibreve","XK_identical","XK_idiaeresis","XK_idotless","XK_ifonlyif","XK_imacron","XK_implies","XK_includedin","XK_includes","XK_infinity","XK_integral","XK_intersection","XK_iogonek","XK_itilde","XK_j","XK_jot","XK_k","XK_kappa","XK_kcedilla","XK_kra","XK_l","XK_lacute","XK_latincross","XK_lcaron","XK_lcedilla","XK_leftanglebracket","XK_leftarrow","XK_leftcaret","XK_leftdoublequotemark","XK_leftmiddlecurlybrace","XK_leftopentriangle","XK_leftpointer","XK_leftradical","XK_leftshoe","XK_leftsinglequotemark","XK_leftt","XK_lefttack","XK_less","XK_lessthanequal","XK_lf","XK_logicaland","XK_logicalor","XK_lowleftcorner","XK_lowrightcorner","XK_lstroke","XK_m","XK_macron","XK_malesymbol","XK_maltesecross","XK_marker","XK_masculine","XK_minus","XK_minutes","XK_mu","XK_multiply","XK_musicalflat","XK_musicalsharp","XK_n","XK_nabla","XK_nacute","XK_ncaron","XK_ncedilla","XK_nl","XK_nobreakspace","XK_notequal","XK_notsign","XK_ntilde","XK_numbersign","XK_numerosign","XK_o","XK_oacute","XK_obarred","XK_ocaron","XK_odiaeresis","XK_odoubleacute","XK_oe","XK_ogonek","XK_omacron","XK_oneeighth","XK_onefifth","XK_onehalf","XK_onequarter","XK_onesixth","XK_onethird","XK_ooblique","XK_openstar","XK_ordfeminine","XK_oslash","XK_otilde","XK_overbar","XK_overline","XK_p","XK_paragraph","XK_parenleft","XK_parenright","XK_partialderivative","XK_percent","XK_period","XK_periodcentered","XK_permille","XK_phonographcopyright","XK_plus","XK_plusminus","XK_prescription","XK_prolongedsound","XK_punctspace","XK_q","XK_quad","XK_question","XK_questiondown","XK_quotedbl","XK_quoteleft","XK_quoteright","XK_r","XK_racute","XK_radical","XK_rcaron","XK_rcedilla","XK_registered","XK_rightanglebracket","XK_rightarrow","XK_rightcaret","XK_rightdoublequotemark","XK_rightmiddlecurlybrace","XK_rightopentriangle","XK_rightpointer","XK_rightshoe","XK_rightsinglequotemark","XK_rightt","XK_righttack","XK_s","XK_sacute","XK_scaron","XK_scedilla","XK_schwa","XK_script_switch","XK_seconds","XK_section","XK_semicolon","XK_semivoicedsound","XK_seveneighths","XK_signaturemark","XK_signifblank","XK_similarequal","XK_singlelowquotemark","XK_slash","XK_soliddiamond","XK_space","XK_ssharp","XK_sterling","XK_t","XK_tcaron","XK_tcedilla","XK_telephone","XK_telephonerecorder","XK_therefore","XK_thinspace","XK_threeeighths","XK_threefifths","XK_threequarters","XK_topintegral","XK_topleftparens","XK_topleftradical","XK_topleftsqbracket","XK_toprightparens","XK_toprightsqbracket","XK_topt","XK_trademark","XK_tslash","XK_twofifths","XK_twothirds","XK_u","XK_uacute","XK_ubreve","XK_udiaeresis","XK_udoubleacute","XK_umacron","XK_underbar","XK_underscore","XK_union","XK_uogonek","XK_uparrow","XK_upcaret","XK_upleftcorner","XK_uprightcorner","XK_upshoe","XK_upstile","XK_uptack","XK_uring","XK_utilde","XK_v","XK_variation","XK_vertbar","XK_vertconnector","XK_voicedsound","XK_vt","XK_w","XK_wacute","XK_wdiaeresis","XK_x","XK_y","XK_yacute","XK_ydiaeresis","XK_yen","XK_ytilde","XK_z","XK_zacute","XK_zcaron","XK_zstroke","XKeySym","XKeySymIter","as_ref","as_utf8_string","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","fmt","from","from","from_str","hash","into","into","into_iter","iter","len","next","next_back","nth","size_hint","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"penrose_keysyms"],[716,"alloc::string"],[717,"alloc::string"],[718,"core::fmt"],[719,"core::fmt"],[720,"core::option"],[721,"core::any"]],"d":["XF86XK_AudioLowerVolume","XF86XK_AudioMicMute","XF86XK_AudioMute","XF86XK_AudioNext","XF86XK_AudioPlay","XF86XK_AudioPrev","XF86XK_AudioRaiseVolume","XF86XK_AudioStop","XF86XK_Calculator","XF86XK_DisplayOff","XF86XK_KbdBrightnessDown","XF86XK_KbdBrightnessUp","XF86XK_KbdLightOnOff","XF86XK_MonBrightnessCycle","XF86XK_MonBrightnessDown","XF86XK_MonBrightnessUp","XF86XK_Standby","XF86XK_TouchpadToggle","XK_0","XK_1","XK_2","XK_3","XK_3270_AltCursor","XK_3270_Attn","XK_3270_BackTab","XK_3270_Copy","XK_3270_CursorBlink","XK_3270_CursorSelect","XK_3270_DeleteWord","XK_3270_Duplicate","XK_3270_Enter","XK_3270_EraseEOF","XK_3270_EraseInput","XK_3270_ExSelect","XK_3270_FieldMark","XK_3270_Ident","XK_3270_Jump","XK_3270_KeyClick","XK_3270_Left2","XK_3270_PA1","XK_3270_PA2","XK_3270_PA3","XK_3270_Play","XK_3270_Quit","XK_3270_Record","XK_3270_Reset","XK_3270_Right2","XK_3270_Rule","XK_3270_Setup","XK_3270_Test","XK_4","XK_5","XK_6","XK_7","XK_8","XK_9","XK_A","XK_AE","XK_Aacute","XK_Abreve","XK_Abreveacute","XK_Abrevetilde","XK_Adiaeresis","XK_Alt_L","XK_Alt_R","XK_Amacron","XK_Aogonek","XK_Aring","XK_Atilde","XK_B","XK_BackSpace","XK_Begin","XK_Break","XK_C","XK_CH","XK_C_H","XK_C_h","XK_Cacute","XK_Cancel","XK_Caps_Lock","XK_Ccaron","XK_Ccedilla","XK_Ch","XK_Clear","XK_ColonSign","XK_Control_L","XK_Control_R","XK_CruzeiroSign","XK_D","XK_Dcaron","XK_Delete","XK_DongSign","XK_Down","XK_Dstroke","XK_E","XK_ENG","XK_ETH","XK_EZH","XK_Eacute","XK_Ecaron","XK_EcuSign","XK_Ediaeresis","XK_Emacron","XK_End","XK_Eogonek","XK_Escape","XK_Eth","XK_Etilde","XK_EuroSign","XK_Execute","XK_F","XK_F1","XK_F10","XK_F11","XK_F12","XK_F13","XK_F14","XK_F15","XK_F16","XK_F17","XK_F18","XK_F19","XK_F2","XK_F20","XK_F21","XK_F22","XK_F23","XK_F24","XK_F25","XK_F26","XK_F27","XK_F28","XK_F29","XK_F3","XK_F30","XK_F31","XK_F32","XK_F33","XK_F34","XK_F35","XK_F4","XK_F5","XK_F6","XK_F7","XK_F8","XK_F9","XK_FFrancSign","XK_Find","XK_G","XK_Gbreve","XK_Gcaron","XK_Gcedilla","XK_H","XK_Help","XK_Home","XK_Hstroke","XK_Hyper_L","XK_Hyper_R","XK_I","XK_ISO_Center_Object","XK_ISO_Continuous_Underline","XK_ISO_Discontinuous_Underline","XK_ISO_Emphasize","XK_ISO_Enter","XK_ISO_Left_Tab","XK_ISO_Level2_Latch","XK_ISO_Level3_Latch","XK_ISO_Level3_Lock","XK_ISO_Level3_Shift","XK_ISO_Level5_Latch","XK_ISO_Level5_Lock","XK_ISO_Level5_Shift","XK_ISO_Lock","XK_ISO_Partial_Space_Left","XK_ISO_Partial_Space_Right","XK_ISO_Set_Margin_Left","XK_ISO_Set_Margin_Right","XK_Iacute","XK_Ibreve","XK_Idiaeresis","XK_Imacron","XK_Insert","XK_Iogonek","XK_Itilde","XK_J","XK_K","XK_KP_0","XK_KP_1","XK_KP_2","XK_KP_3","XK_KP_4","XK_KP_5","XK_KP_6","XK_KP_7","XK_KP_8","XK_KP_9","XK_KP_Add","XK_KP_Begin","XK_KP_Decimal","XK_KP_Delete","XK_KP_Divide","XK_KP_Down","XK_KP_End","XK_KP_Enter","XK_KP_Equal","XK_KP_F1","XK_KP_F2","XK_KP_F3","XK_KP_F4","XK_KP_Home","XK_KP_Insert","XK_KP_Left","XK_KP_Multiply","XK_KP_Next","XK_KP_Page_Down","XK_KP_Page_Up","XK_KP_Prior","XK_KP_Right","XK_KP_Separator","XK_KP_Space","XK_KP_Subtract","XK_KP_Tab","XK_KP_Up","XK_Kcedilla","XK_Korean_Won","XK_L","XK_L1","XK_L10","XK_L2","XK_L3","XK_L4","XK_L5","XK_L6","XK_L7","XK_L8","XK_L9","XK_Lacute","XK_Lcaron","XK_Lcedilla","XK_Left","XK_Linefeed","XK_LiraSign","XK_Lstroke","XK_M","XK_Menu","XK_Meta_L","XK_Meta_R","XK_MillSign","XK_Mode_switch","XK_N","XK_Nacute","XK_NairaSign","XK_Ncaron","XK_Ncedilla","XK_NewSheqelSign","XK_Next","XK_Ntilde","XK_Num_Lock","XK_O","XK_OE","XK_Oacute","XK_Obarred","XK_Ocaron","XK_Odiaeresis","XK_Odoubleacute","XK_Omacron","XK_Ooblique","XK_Oslash","XK_Otilde","XK_P","XK_Page_Down","XK_Page_Up","XK_Pause","XK_PesetaSign","XK_Print","XK_Prior","XK_Q","XK_R","XK_R1","XK_R10","XK_R11","XK_R12","XK_R13","XK_R14","XK_R15","XK_R2","XK_R3","XK_R4","XK_R5","XK_R6","XK_R7","XK_R8","XK_R9","XK_Racute","XK_Rcaron","XK_Rcedilla","XK_Redo","XK_Return","XK_Right","XK_RupeeSign","XK_S","XK_SCHWA","XK_Sacute","XK_Scaron","XK_Scedilla","XK_Scroll_Lock","XK_Select","XK_Shift_L","XK_Shift_Lock","XK_Shift_R","XK_Super_L","XK_Super_R","XK_Sys_Req","XK_T","XK_Tab","XK_Tcaron","XK_Tcedilla","XK_Terminate_Server","XK_Tslash","XK_U","XK_Uacute","XK_Ubreve","XK_Udiaeresis","XK_Udoubleacute","XK_Umacron","XK_Undo","XK_Uogonek","XK_Up","XK_Uring","XK_Utilde","XK_V","XK_W","XK_Wacute","XK_Wdiaeresis","XK_WonSign","XK_X","XK_Y","XK_Yacute","XK_Ydiaeresis","XK_Ytilde","XK_Z","XK_Zacute","XK_Zcaron","XK_Zstroke","XK_a","XK_aacute","XK_abreve","XK_abreveacute","XK_abrevetilde","XK_acute","XK_adiaeresis","XK_ae","XK_amacron","XK_ampersand","XK_aogonek","XK_apostrophe","XK_approximate","XK_aring","XK_asciicircum","XK_asciitilde","XK_asterisk","XK_at","XK_atilde","XK_b","XK_backslash","XK_ballotcross","XK_bar","XK_blank","XK_botintegral","XK_botleftparens","XK_botleftsqbracket","XK_botrightparens","XK_botrightsqbracket","XK_bott","XK_braceleft","XK_braceright","XK_bracketleft","XK_bracketright","XK_breve","XK_brokenbar","XK_c","XK_c_h","XK_cacute","XK_careof","XK_caret","XK_caron","XK_ccaron","XK_ccedilla","XK_cedilla","XK_cent","XK_ch","XK_checkerboard","XK_checkmark","XK_club","XK_colon","XK_comma","XK_copyright","XK_cr","XK_crossinglines","XK_currency","XK_cursor","XK_d","XK_dagger","XK_dcaron","XK_decimalpoint","XK_degree","XK_diaeresis","XK_diamond","XK_digitspace","XK_division","XK_dollar","XK_doubbaselinedot","XK_doubleacute","XK_doubledagger","XK_doublelowquotemark","XK_downarrow","XK_downcaret","XK_downshoe","XK_downstile","XK_downtack","XK_dstroke","XK_e","XK_eacute","XK_ecaron","XK_ediaeresis","XK_ellipsis","XK_em3space","XK_em4space","XK_emacron","XK_emdash","XK_emfilledrect","XK_emopenrectangle","XK_emspace","XK_endash","XK_eng","XK_enspace","XK_eogonek","XK_equal","XK_eth","XK_etilde","XK_exclam","XK_exclamdown","XK_ezh","XK_f","XK_femalesymbol","XK_ff","XK_figdash","XK_fiveeighths","XK_fivesixths","XK_fourfifths","XK_function","XK_g","XK_gbreve","XK_gcaron","XK_gcedilla","XK_grave","XK_greater","XK_greaterthanequal","XK_guillemotleft","XK_guillemotright","XK_h","XK_hairspace","XK_heart","XK_hexagram","XK_horizconnector","XK_hstroke","XK_ht","XK_hyphen","XK_i","XK_iacute","XK_ibreve","XK_identical","XK_idiaeresis","XK_idotless","XK_ifonlyif","XK_imacron","XK_implies","XK_includedin","XK_includes","XK_infinity","XK_integral","XK_intersection","XK_iogonek","XK_itilde","XK_j","XK_jot","XK_k","XK_kappa","XK_kcedilla","XK_kra","XK_l","XK_lacute","XK_latincross","XK_lcaron","XK_lcedilla","XK_leftanglebracket","XK_leftarrow","XK_leftcaret","XK_leftdoublequotemark","XK_leftmiddlecurlybrace","XK_leftopentriangle","XK_leftpointer","XK_leftradical","XK_leftshoe","XK_leftsinglequotemark","XK_leftt","XK_lefttack","XK_less","XK_lessthanequal","XK_lf","XK_logicaland","XK_logicalor","XK_lowleftcorner","XK_lowrightcorner","XK_lstroke","XK_m","XK_macron","XK_malesymbol","XK_maltesecross","XK_marker","XK_masculine","XK_minus","XK_minutes","XK_mu","XK_multiply","XK_musicalflat","XK_musicalsharp","XK_n","XK_nabla","XK_nacute","XK_ncaron","XK_ncedilla","XK_nl","XK_nobreakspace","XK_notequal","XK_notsign","XK_ntilde","XK_numbersign","XK_numerosign","XK_o","XK_oacute","XK_obarred","XK_ocaron","XK_odiaeresis","XK_odoubleacute","XK_oe","XK_ogonek","XK_omacron","XK_oneeighth","XK_onefifth","XK_onehalf","XK_onequarter","XK_onesixth","XK_onethird","XK_ooblique","XK_openstar","XK_ordfeminine","XK_oslash","XK_otilde","XK_overbar","XK_overline","XK_p","XK_paragraph","XK_parenleft","XK_parenright","XK_partialderivative","XK_percent","XK_period","XK_periodcentered","XK_permille","XK_phonographcopyright","XK_plus","XK_plusminus","XK_prescription","XK_prolongedsound","XK_punctspace","XK_q","XK_quad","XK_question","XK_questiondown","XK_quotedbl","XK_quoteleft","XK_quoteright","XK_r","XK_racute","XK_radical","XK_rcaron","XK_rcedilla","XK_registered","XK_rightanglebracket","XK_rightarrow","XK_rightcaret","XK_rightdoublequotemark","XK_rightmiddlecurlybrace","XK_rightopentriangle","XK_rightpointer","XK_rightshoe","XK_rightsinglequotemark","XK_rightt","XK_righttack","XK_s","XK_sacute","XK_scaron","XK_scedilla","XK_schwa","XK_script_switch","XK_seconds","XK_section","XK_semicolon","XK_semivoicedsound","XK_seveneighths","XK_signaturemark","XK_signifblank","XK_similarequal","XK_singlelowquotemark","XK_slash","XK_soliddiamond","XK_space","XK_ssharp","XK_sterling","XK_t","XK_tcaron","XK_tcedilla","XK_telephone","XK_telephonerecorder","XK_therefore","XK_thinspace","XK_threeeighths","XK_threefifths","XK_threequarters","XK_topintegral","XK_topleftparens","XK_topleftradical","XK_topleftsqbracket","XK_toprightparens","XK_toprightsqbracket","XK_topt","XK_trademark","XK_tslash","XK_twofifths","XK_twothirds","XK_u","XK_uacute","XK_ubreve","XK_udiaeresis","XK_udoubleacute","XK_umacron","XK_underbar","XK_underscore","XK_union","XK_uogonek","XK_uparrow","XK_upcaret","XK_upleftcorner","XK_uprightcorner","XK_upshoe","XK_upstile","XK_uptack","XK_uring","XK_utilde","XK_v","XK_variation","XK_vertbar","XK_vertconnector","XK_voicedsound","XK_vt","XK_w","XK_wacute","XK_wdiaeresis","XK_x","XK_y","XK_yacute","XK_ydiaeresis","XK_yen","XK_ytilde","XK_z","XK_zacute","XK_zcaron","XK_zstroke","X keysym mappings: auto generated from X11/keysymdef.h","An iterator over the variants of XKeySym","","Convert this keysym to its utf8 representation if possible","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,6,1,6,1,6,1,6,1,1,6,1,6,1,1,1,6,6,1,6,6,6,6,6,1,6,1,1,6,1,6,1,6],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,[[5,[3,4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[6,6],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[1,1],8],[[1,9],10],[[6,9],10],[-1,-1,[]],[-1,-1,[]],[2,[[5,[1]]]],[[1,-1],7,11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[6,12],[6,13],[6,13],[[6,12],13],[6,[[7,[12,[13,[12]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[2,[[5,[1]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,14,[]],[-1,14,[]]],"c":[],"p":[[4,"XKeySym",0],[15,"str"],[3,"String",716],[3,"FromUtf8Error",716],[4,"Result",717],[3,"XKeySymIter",0],[15,"tuple"],[15,"bool"],[3,"Formatter",718],[6,"Result",718],[8,"Hasher",719],[15,"usize"],[4,"Option",720],[3,"TypeId",721]],"b":[]},\
"penrose_ui":{"doc":"Penrose-ui: a bare bones toolkit for adding UI elements to â€¦","t":"CCNENNNNNNCGCCNNNNNALLALLLLLLLLFLLLLMMNEDNLLLLLLLLFLLLLLLLFLFFLLLLLLLLADDDDDDIDFFLLLLLLLLLLLLLLLLLLLLLLLLFKLLLLLLLAKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLL","n":["Context","Draw","Err","Error","InvalidHexColor","NoFallbackFontForChar","NulError","Ok","ParseInt","Penrose","Position","Result","StatusBar","TextStyle","UnableToAllocateColor","UnableToOpenFont","UnableToOpenFontPattern","UnableToParseFontPattern","UnintialisedSurface","bar","borrow","borrow_mut","core","fmt","fmt","from","from","from","from","into","source","status_bar","to_string","try_from","try_into","type_id","code","id","Bottom","Position","StatusBar","Top","add_to","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","event_hook","fmt","fmt","from","from","hash","into","into","manage_hook","redraw","refresh_hook","startup_hook","to_owned","try_from","try_from","try_into","try_into","try_new","type_id","type_id","widgets","ActiveWindowName","CurrentLayout","IntervalText","RefreshText","RootWindowName","Text","Widget","Workspaces","amixer_volume","battery_summary","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","current_date_and_time","current_extent","current_extent","current_extent","current_extent","current_extent","current_extent","current_extent","current_extent","debug","draw","draw","draw","draw","draw","draw","draw","draw","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_text","get_text_mut","into","into","into","into","into","into","into","is_greedy","is_greedy","is_greedy","is_greedy","is_greedy","is_greedy","is_greedy","is_greedy","new","new","new","new","new","new","new","on_event","on_event","on_event","on_new_client","on_refresh","on_refresh","on_refresh","on_refresh","on_refresh","on_startup","on_startup","require_draw","require_draw","require_draw","require_draw","require_draw","require_draw","require_draw","require_draw","set_text","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wifi_network","ActiveWindowId","StateSummary","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","current_extent","current_extent","draw","draw","eq","eq","fmt","fmt","from","from","into","into","is_greedy","is_greedy","new","new","on_refresh","on_refresh","require_draw","require_draw","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Context","Draw","TextStyle","bg","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","context_for","destroy_window_and_surface","draw_rect","draw_text","drop","eq","fg","fill_bg","fill_rect","flush","flush","fmt","fmt","fmt","from","from","from","into","into","into","new","new_window","padding","reset_offset","set_font","set_x_offset","set_y_offset","text_extent","to_owned","translate","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"penrose_ui"],[36,"penrose_ui::Error"],[38,"penrose_ui::bar"],[71,"penrose_ui::bar::widgets"],[213,"penrose_ui::bar::widgets::debug"],[251,"penrose_ui::core"],[303,"core::fmt"],[304,"core::fmt"],[305,"core::num::error"],[306,"alloc::ffi::c_str"],[307,"core::error"],[308,"core::option"],[309,"penrose"],[310,"penrose::x"],[311,"alloc::string"],[312,"core::result"],[313,"core::any"],[314,"penrose::core"],[315,"penrose::x::event"],[316,"penrose::core"],[317,"penrose::core"],[318,"alloc::vec"],[319,"core::ops::function"],[320,"core::time"],[321,"core::marker"],[322,"penrose::pure::geometry"],[323,"penrose::x"]],"d":["","","Contains the error value","Error variants from penrose_ui library.","Creation of a <code>Color</code> from a string hex code was invalid","The specified character can not be rendered by any font on â€¦","A string being passed to underlying C APIs contained an â€¦","Contains the success value","Unable to parse an integer from a provided string.","An error was returned from the <code>XConn</code> when interacting with â€¦","","A Result where the error type is a penrose_ui <code>Error</code>","","","Unable to allocate a requested color","Unable to open a requested font","Unable to open a font using an Xft font pattern","Unable to parse an Xft font pattern","An attempt was made to work with a surface for a window â€¦","A lightweight and configurable status bar for penrose","","","The core <code>Draw</code> and <code>Context</code> structs for rendering UI â€¦","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Create a default dwm style status bar that displays â€¦","","","","","The invalid string that was intended as a color hex code","The window id requested","Bottom of the screen","The position of a status bar","A simple text based status bar that renders a user defined â€¦","Top of the screen","Add this <code>StatusBar</code> into the given <code>WindowManager</code> along with â€¦","","","","","","","","Run any widget event actions and then redraw if needed","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Run any widget on_new_client actions and then redraw if â€¦","Re-render all widgets in this status bar","Run any widget refresh actions and then redraw if needed","Run any widget startup actions and then redraw","","","","","","Try to initialise a new empty status bar. Can fail if we â€¦","","","Self rendering building blocks for text based UI elements","A text widget that shows the name of the currently focused â€¦","A text widget that shows the current layout name","A simple widget that does not care about window manager â€¦","A simple widget that does not care about window manager â€¦","A text widget that is set via updating the root window â€¦","A simple piece of static text with an optional background â€¦","A status bar widget that can be rendered using a Context","A simple workspace indicator for a status bar","Display the current volume level as reported by <code>amixer</code>","Display the current charge level and status of a named â€¦","","","","","","","","","","","","","","","","","","","","","","","","","Display the current date and time in YYYY-MM-DD HH:MM â€¦","Current required width and height for this widget due to â€¦","","","","","","","","Widgets for showing debug information about the current â€¦","Render the current state of the widget to the status bar â€¦","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Borrow the current contents of the widget.","Mutably borrow the current contents of the widget.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If true, this widget will expand to fill remaining â€¦","","","","","","","","Construct a new <code>RefreshText</code> using the specified styling â€¦","Create a new RootWindowName widget","Create a new ActiveWindowName widget with a maximum â€¦","Create a new CurrentLayout widget","Construct a new WorkspaceWidget","Construct a new Text","Construct a new <code>IntervalText</code> using the specified styling â€¦","An event hook to be run in order to update this Widget","","","A manage hook to be run in order to update this Widget","A refresh hook to be run in order to update this Widget","","","","","A startup hook to be run in order to initialise this Widget","","Does this widget currently require re-rendering? (should â€¦","","","","","","","","Set the rendered text and trigger a redraw","","","","","","","","","","","","","","","","","","","","","","","","","","","Display the ESSID currently connected to and the signal â€¦","A text widget that shows the Xid of the current client","A text widget that shows a summary of the current Window â€¦","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new ActiveWindowId widget.","Create a new StateSummary widget.","","","","","","","","","","","","","A minimal drawing context for rendering text based UI â€¦","A minimal back end for rendering simple text based UIs.","A set of styling options for a text string that is to be â€¦","The background color for the region behind the text â€¦","","","","","","","Clear the underlying surface, restoring it to the â€¦","","","Retrieve the drawing Context for the given window <code>Xid</code>.","Destroy the specified window along with any surface and â€¦","Render a rectangular border using the supplied color.","Render the provided text at the current context offset â€¦","","","The foreground color to be used for rendering the text â€¦","Fill the specified area with this Contextâ€™s background â€¦","Render a filled rectangle using the supplied color.","Flush any pending requests to the X server and map the â€¦","Flush pending requests to the X server.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a new Draw instance using the specified font and â€¦","Create a new X window with an initialised surface for â€¦","Padding in pixels around the text to the left and right.","Set future drawing operations to apply from the origin.","Set the font being used for rendering text and clear the â€¦","Set an absolute x offset for future drawing operations.","Set an absolute y offset for future drawing operations.","Determine the width and height taken up by a given string â€¦","","Offset future drawing operations by an additional (dx, dy)","","","","","","","","",""],"i":[0,0,15,0,1,1,1,15,1,1,0,0,0,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,51,52,13,0,0,13,14,14,13,14,13,13,13,13,0,14,13,14,13,13,14,13,0,14,0,0,13,14,13,14,13,14,14,13,0,0,0,0,0,0,0,0,0,0,0,33,34,35,36,37,38,40,33,34,35,36,37,38,40,34,35,36,37,38,34,35,36,37,38,0,30,33,34,35,36,37,38,40,0,30,33,34,35,36,37,38,40,34,35,36,37,38,33,34,35,36,37,38,40,33,34,35,36,37,38,40,38,38,33,34,35,36,37,38,40,30,33,34,35,36,37,38,40,33,34,35,36,37,38,40,30,34,35,30,30,33,35,36,37,30,37,30,33,34,35,36,37,38,40,38,34,35,36,37,38,33,34,35,36,37,38,40,33,34,35,36,37,38,40,33,34,35,36,37,38,40,0,0,0,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,45,46,0,0,0,12,12,47,39,12,47,39,39,12,12,47,47,39,39,47,12,12,39,39,47,39,12,47,39,12,47,39,12,47,39,47,47,12,39,47,39,39,39,12,39,12,47,39,12,47,39,12,47,39],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[1,2],3],[[1,2],3],[4,1],[-1,-1,[]],[5,1],[6,1],[-1,-2,[],[]],[1,[[8,[7]]]],[[9,10,11,12,-1,-2,13],[[15,[[14,[-3]]]]],[[17,[16]]],[[17,[16]]],18],[-1,19,[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],0,0,0,0,0,0,[[[14,[-1]],[22,[-1]]],[[22,[-1]]],18],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[13,13],[[-1,-2],23,[],[]],[[13,13],24],[[25,[26,[-1]],-1],[[27,[24]]],18],[[[14,[-1]],2],3,18],[[13,2],3],[-1,-1,[]],[-1,-1,[]],[[13,-1],23,28],[-1,-2,[],[]],[-1,-2,[],[]],[[29,[26,[-1]],-1],[[27,[23]]],18],[[[14,[-1]]],[[15,[23]]],18],[[[26,[-1]],-1],[[27,[23]]],18],[[[26,[-1]],-1],[[27,[23]]],18],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[[13,9,-1,10,11,[32,[[31,[30]]]]],[[15,[[14,[-2]]]]],[[17,[16]]],18],[-1,21,[]],[-1,21,[]],0,0,0,0,0,0,0,0,0,[[10,12],33],[[10,12],33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,34],[35,35],[36,36],[37,37],[38,38],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[12,33],[[-1,39,9],[[15,[[23,[9,9]]]]],[]],[[33,39,9],[[15,[[23,[9,9]]]]]],[[34,39,9],[[15,[[23,[9,9]]]]]],[[35,39,9],[[15,[[23,[9,9]]]]]],[[36,39,9],[[15,[[23,[9,9]]]]]],[[37,39,9],[[15,[[23,[9,9]]]]]],[[38,39,9],[[15,[[23,[9,9]]]]]],[[40,39,9],[[15,[[23,[9,9]]]]]],0,[[-1,39,41,24,9,9],[[15,[23]]],[]],[[33,39,41,24,9,9],[[15,[23]]]],[[34,39,41,24,9,9],[[15,[23]]]],[[35,39,41,24,9,9],[[15,[23]]]],[[36,39,41,24,9,9],[[15,[23]]]],[[37,39,41,24,9,9],[[15,[23]]]],[[38,39,41,24,9,9],[[15,[23]]]],[[40,39,41,24,9,9],[[15,[23]]]],[[34,34],24],[[35,35],24],[[36,36],24],[[37,37],24],[[38,38],24],[[33,2],3],[[34,2],3],[[35,2],3],[[36,2],3],[[37,2],3],[[38,2],3],[[40,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[38,19],[38,19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,24,[]],[33,24],[34,24],[35,24],[36,24],[37,24],[38,24],[40,24],[[12,-1],33,42],[[12,24,24],34],[[41,12,24,24],35],[12,36],[[12,-1,-2],37,[[17,[16]]],[[17,[16]]]],[[-1,12,24,24],38,[[17,[19]]]],[[12,-1,43],40,[42,44]],[[-1,25,[26,[-2]],-2],[[15,[23]]],[],[]],[[34,25,[26,[-1]],-1],[[15,[23]]],18],[[35,25,[26,[-1]],-1],[[15,[23]]],18],[[-1,29,[26,[-2]],-2],[[15,[23]]],[],[]],[[-1,[26,[-2]],-2],[[15,[23]]],[],[]],[[33,[26,[-1]],-1],[[15,[23]]],18],[[35,[26,[-1]],-1],[[15,[23]]],18],[[36,[26,[-1]],-1],[[15,[23]]],18],[[37,[26,[-1]],-1],[[15,[23]]],18],[[-1,[26,[-2]],-2],[[15,[23]]],[],[]],[[37,[26,[-1]],-1],[[15,[23]]],18],[-1,24,[]],[33,24],[34,24],[35,24],[36,24],[37,24],[38,24],[40,24],[[38,-1],23,[[17,[19]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[12,33],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,45],[46,46],[[-1,-2],23,[],[]],[[-1,-2],23,[],[]],[[45,39,9],[[15,[[23,[9,9]]]]]],[[46,39,9],[[15,[[23,[9,9]]]]]],[[45,39,41,24,9,9],[[15,[23]]]],[[46,39,41,24,9,9],[[15,[23]]]],[[45,45],24],[[46,46],24],[[45,2],3],[[46,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,24],[46,24],[[12,24,24],45],[12,46],[[45,[26,[-1]],-1],[[15,[23]]],18],[[46,[26,[-1]],-1],[[15,[23]]],18],[45,24],[46,24],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,[[15,[23]]]],[12,12],[[-1,-2],23,[],[]],[[47,29],[[15,[39]]]],[[47,29],[[15,[23]]]],[[39,48,16],[[15,[23]]]],[[39,10,9,[23,[9,9]],16],[[15,[[23,[9,9]]]]]],[47,23],[[12,12],24],0,[[39,48],[[15,[23]]]],[[39,48,16],[[15,[23]]]],[[47,29],[[15,[23]]]],[39,23],[[12,2],3],[[47,2],3],[[39,2],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[10,11,-1],[[15,[47]]],[[17,[16]]]],[[47,49,48,24],[[15,[29]]]],0,[39,23],[[47,10,11],[[15,[23]]]],[[39,50],23],[[39,50],23],[[39,10],[[15,[[23,[9,9]]]]]],[-1,-2,[],[]],[[39,50,50],23],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]]],"c":[],"p":[[4,"Error",0],[3,"Formatter",303],[6,"Result",303],[4,"Error",304],[3,"ParseIntError",305],[3,"NulError",306],[8,"Error",307],[4,"Option",308],[15,"u32"],[15,"str"],[15,"u8"],[3,"TextStyle",251],[4,"Position",38],[3,"StatusBar",38],[6,"Result",0],[3,"Color",304],[8,"Into",309],[8,"XConn",310],[3,"String",311],[4,"Result",312],[3,"TypeId",313],[3,"WindowManager",314],[15,"tuple"],[15,"bool"],[4,"XEvent",315],[3,"State",314],[6,"Result",304],[8,"Hasher",316],[3,"Xid",314],[8,"Widget",71],[3,"Box",317],[3,"Vec",318],[3,"RefreshText",71],[3,"RootWindowName",71],[3,"ActiveWindowName",71],[3,"CurrentLayout",71],[3,"Workspaces",71],[3,"Text",71],[3,"Context",251],[3,"IntervalText",71],[15,"usize"],[8,"Fn",319],[3,"Duration",320],[8,"Send",321],[3,"ActiveWindowId",213],[3,"StateSummary",213],[3,"Draw",251],[3,"Rect",322],[4,"WinType",310],[15,"i32"],[13,"InvalidHexColor",36],[13,"UnintialisedSurface",36]],"b":[[23,"impl-Debug-for-Error"],[24,"impl-Display-for-Error"],[25,"impl-From%3CError%3E-for-Error"],[27,"impl-From%3CParseIntError%3E-for-Error"],[28,"impl-From%3CNulError%3E-for-Error"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
