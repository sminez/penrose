(function() {var type_impls = {
"penrose":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Stack%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#77-497\">source</a><a href=\"#impl-Stack%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#80-95\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.new\" class=\"fn\">new</a>&lt;I, J&gt;(up: I, focus: T, down: J) -&gt; Self<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,\n    J: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Create a new Stack specifying the focused element and and elements\nabove and below it.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#101-117\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.try_from_iter\" class=\"fn\">try_from_iter</a>&lt;I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</span></h4></section></summary><div class=\"docblock\"><p>For an iterator of at least one element, the first element will\nbe focused and all remaining elements will be placed after it.\nFor an empty iterator, return None.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#134-136\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>The number of elements in this Stack.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#139-141\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Always false: a Stack always has at least one focused element.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#145-151\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; Iter&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Provide an iterator over this stack iterating over up,\nfocus and then down.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#155-161\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.iter_mut\" class=\"fn\">iter_mut</a>(&amp;mut self) -&gt; IterMut&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Provide an iterator over this stack iterating over up,\nfocus and then down with mutable references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unravel\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#172-176\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.unravel\" class=\"fn\">unravel</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Iterate over the clients in this stack from the the focused element\ndown through the stack.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>\n<span class=\"kw\">let </span>unraveled: Vec&lt;u8&gt; = <span class=\"macro\">stack!</span>([<span class=\"number\">1</span>, <span class=\"number\">2</span>], <span class=\"number\">3</span>, [<span class=\"number\">4</span>, <span class=\"number\">5</span>]).unravel().copied().collect();\n<span class=\"macro\">assert_eq!</span>(unraveled, <span class=\"macro\">vec!</span>[<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flatten\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#180-182\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.flatten\" class=\"fn\">flatten</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Flatten a Stack into a Vector, losing the information of which\nelement is focused.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.head\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#185-187\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.head\" class=\"fn\">head</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Return a reference to the first element in this <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.focused\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#190-192\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.focused\" class=\"fn\">focused</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Return a reference to the focused element in this <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.last\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#195-197\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.last\" class=\"fn\">last</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class=\"docblock\"><p>Return a reference to the last element in this <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_focus_and_head\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#201-213\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.swap_focus_and_head\" class=\"fn\">swap_focus_and_head</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Swap the current head element with the focused element in the\nstack order. Focus stays with the original focused element.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_focus_to_head\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#216-226\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.rotate_focus_to_head\" class=\"fn\">rotate_focus_to_head</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Rotate the Stack until the current focused element is in the head position</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.focus_head\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#229-243\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.focus_head\" class=\"fn\">focus_head</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Move focus to the element in the head position</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#247-249\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, t: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Insert the given element in place of the current focus, pushing\nthe current focus down the <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_at\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#255-270\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.insert_at\" class=\"fn\">insert_at</a>(&amp;mut self, pos: <a class=\"enum\" href=\"penrose/pure/enum.Position.html\" title=\"enum penrose::pure::Position\">Position</a>, t: T) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Insert the given element at the requested position in the <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>.\nSee <a href=\"penrose/pure/enum.Position.html\" title=\"enum penrose::pure::Position\">Position</a> for the semantics of each case. For all cases, the\nexisting elements in the <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a> are pushed down to make room for\nthe new one.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_focused\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#274-288\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.remove_focused\" class=\"fn\">remove_focused</a>(self) -&gt; (T, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;)</h4></section></summary><div class=\"docblock\"><p>Remove the focused element of this Stack. If this was the only element then\nthe stack is dropped and None is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#295-313\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.remove\" class=\"fn\">remove</a>(self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>) -&gt; (<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;)<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</span></h4></section></summary><div class=\"docblock\"><p>Remove an element from the stack.</p>\n<p>If the element was present it is returned along with the rest of the <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>.\nIf this was the last element in the stack, the stack is dropped and None is\nreturned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#316-325\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.map\" class=\"fn\">map</a>&lt;F, U&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;U&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T) -&gt; U,</span></h4></section></summary><div class=\"docblock\"><p>Map a function over all elements in this <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>, returning a new one.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.filter\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#332-348\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.filter\" class=\"fn\">filter</a>&lt;F&gt;(self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>,</span></h4></section></summary><div class=\"docblock\"><p>Retain only elements which satisfy the given predicate. If the focused\nelement is removed then focus shifts to the first remaining element\nafter it, if there are no elements after then focus moves to the first\nremaining element before. If no elements satisfy the predicate then\nNone is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reverse\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#353-357\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.reverse\" class=\"fn\">reverse</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Reverse the ordering of a Stack (up becomes down) while maintaining\nfocus.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.focus_up\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#382-405\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.focus_up\" class=\"fn\">focus_up</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Move focus from the current element up the stack, wrapping to the\nbottom if focus is already at the top.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.focus_down\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#409-432\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.focus_down\" class=\"fn\">focus_down</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Move focus from the current element down the stack, wrapping to the\ntop if focus is already at the bottom.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.focus_element_by\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#438-448\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.focus_element_by\" class=\"fn\">focus_element_by</a>&lt;F&gt;(&amp;mut self, f: F)<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>,</span></h4></section></summary><div class=\"docblock\"><p>Focus the first element found matching the given predicate function.</p>\n<p>If no matching elements are found, the Stack will be left in\nits original state.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_up\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#452-460\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.swap_up\" class=\"fn\">swap_up</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Swap the focused element with the one above, wrapping from top to bottom.\nThe currently focused element is maintained by this operation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_down\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#464-472\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.swap_down\" class=\"fn\">swap_down</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Swap the focused element with the one below, wrapping from top to bottom.\nThe currently focused element is maintained by this operation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_up\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#476-484\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.rotate_up\" class=\"fn\">rotate_up</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Rotate all elements of the stack forward, wrapping from top to bottom.\nThe currently focused element in the stack is maintained by this operation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_down\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#488-496\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.rotate_down\" class=\"fn\">rotate_down</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut Self</a></h4></section></summary><div class=\"docblock\"><p>Rotate all elements of the stack back, wrapping from bottom to top.\nThe currently focused element in the stack is maintained by this operation.</p>\n</div></details></div></details>",0,"penrose::core::layout::LayoutStack"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Stack%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#499-552\">source</a><a href=\"#impl-Stack%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_filtered\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#503-510\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.from_filtered\" class=\"fn\">from_filtered</a>&lt;F&gt;(&amp;self, f: F) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>,</span></h4></section></summary><div class=\"docblock\"><p>Attempt to create a new Stack from this one by filtering the existing\nelements using a predicate function. This will return <code>None</code> if no\nelements match the predicate.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extract\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#514-551\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.extract\" class=\"fn\">extract</a>&lt;F&gt;(&amp;self, f: F) -&gt; (<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;)<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>,</span></h4></section></summary><div class=\"docblock\"><p>Extract elements satisfying a predicate into a Vec, leaving remaining\nelements in their original stack position.</p>\n</div></details></div></details>",0,"penrose::core::layout::LayoutStack"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Stack%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#554-567\">source</a><a href=\"#impl-Stack%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#556-558\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.contains\" class=\"fn\">contains</a>(&amp;self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether a given element is in this Stack</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.focus_element\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#564-566\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.Stack.html#tymethod.focus_element\" class=\"fn\">focus_element</a>(&amp;mut self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>)</h4></section></summary><div class=\"docblock\"><p>Attempt to focus a given element in the <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a> if it is present.</p>\n<p>If the requested element is not found, the Stack will be left in\nits original state.</p>\n</div></details></div></details>",0,"penrose::core::layout::LayoutStack"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Stack%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#55\">source</a><a href=\"#impl-Default-for-Stack%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#55\">source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns the โdefault valueโ for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","penrose::core::layout::LayoutStack"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Stack%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#55\">source</a><a href=\"#impl-Clone-for-Stack%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#55\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","penrose::core::layout::LayoutStack"],["<section id=\"impl-StructuralEq-for-Stack%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#55\">source</a><a href=\"#impl-StructuralEq-for-Stack%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;T&gt;</h3></section>","StructuralEq","penrose::core::layout::LayoutStack"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Stack%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#55\">source</a><a href=\"#impl-PartialEq-for-Stack%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#55\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","penrose::core::layout::LayoutStack"],["<section id=\"impl-StructuralPartialEq-for-Stack%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#55\">source</a><a href=\"#impl-StructuralPartialEq-for-Stack%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;T&gt;</h3></section>","StructuralPartialEq","penrose::core::layout::LayoutStack"],["<section id=\"impl-Eq-for-Stack%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#55\">source</a><a href=\"#impl-Eq-for-Stack%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;T&gt;</h3></section>","Eq","penrose::core::layout::LayoutStack"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Stack%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#55\">source</a><a href=\"#impl-Debug-for-Stack%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#55\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","penrose::core::layout::LayoutStack"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Stack%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#62-75\">source</a><a href=\"#impl-Display-for-Stack%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#63-74\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","penrose::core::layout::LayoutStack"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Stack%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#590-601\">source</a><a href=\"#impl-IntoIterator-for-Stack%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = IntoIter&lt;T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack.rs.html#594-600\">source</a><a href=\"#method.into_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; IntoIter&lt;T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","penrose::core::layout::LayoutStack"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()