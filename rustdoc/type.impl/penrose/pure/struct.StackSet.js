(function() {var type_impls = {
"penrose":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-StackSet%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#20\">source</a><a href=\"#impl-Clone-for-StackSet%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#20\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a>&lt;C&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.80.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","penrose::core::ClientSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-StackSet%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#20\">source</a><a href=\"#impl-Debug-for-StackSet%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#20\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.80.1/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.80.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","penrose::core::ClientSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-StackSet%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#20\">source</a><a href=\"#impl-Default-for-StackSet%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#20\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a>&lt;C&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.80.1/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","penrose::core::ClientSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StackSet%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#33-752\">source</a><a href=\"#impl-StackSet%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"struct\" href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#42-57\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.try_new\" class=\"fn\">try_new</a>&lt;I, J, T&gt;(\n    layouts: <a class=\"type\" href=\"penrose/core/layout/type.LayoutStack.html\" title=\"type penrose::core::layout::LayoutStack\">LayoutStack</a>,\n    ws_tags: I,\n    screen_details: J,\n) -&gt; <a class=\"type\" href=\"penrose/type.Result.html\" title=\"type penrose::Result\">Result</a>&lt;Self&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,\n    J: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"struct\" href=\"penrose/pure/geometry/struct.Rect.html\" title=\"struct penrose::pure::geometry::Rect\">Rect</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Create a new <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a> of empty stacks with the given workspace names.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This method will error if there are not enough workspaces to cover the\nattached screens or if no screens are attached.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.focus_screen\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#103-115\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.focus_screen\" class=\"fn\">focus_screen</a>(&amp;mut self, screen_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Set focus to the <a href=\"penrose/pure/struct.Screen.html\" title=\"struct penrose::pure::Screen\">Screen</a> with the specified index.</p>\n<p>If there is no matching screen then the <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a> is unmodified.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.focus_tag\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#133-148\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.focus_tag\" class=\"fn\">focus_tag</a>(&amp;mut self, tag: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Set focus to the <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> with the specified tag.</p>\n<p>If there is no matching workspace then the <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a> is unmodified.\nIf the <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> is currently visible then focus moves to the screen\ncontaining that workspace, otherwise the workspace replaces whatever\nwas on the active screen.</p>\n<p>If you always want to focus the given tag on the active screen, see\n<a href=\"penrose/pure/struct.StackSet.html#method.pull_tag_to_screen\" title=\"method penrose::pure::StackSet::pull_tag_to_screen\">StackSet::pull_tag_to_screen</a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pull_tag_to_screen\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#200-210\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.pull_tag_to_screen\" class=\"fn\">pull_tag_to_screen</a>(&amp;mut self, tag: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Focus the requested tag on the current screen, swapping the current\ntag with it.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle_tag\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#213-215\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.toggle_tag\" class=\"fn\">toggle_tag</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Toggle focus back to the previously focused <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> based on its tag</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.focus_client\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#221-236\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.focus_client\" class=\"fn\">focus_client</a>(&amp;mut self, client: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;C</a>)</h4></section></summary><div class=\"docblock\"><p>Focus the given client and set its <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> as current (see\nfocus_tag).</p>\n<p>If the client is unknown then this is a no-op.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#239-241\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.insert\" class=\"fn\">insert</a>(&amp;mut self, client: C)</h4></section></summary><div class=\"docblock\"><p>Insert the given client to the current <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a> in a default <a href=\"penrose/pure/enum.Position.html\" title=\"enum penrose::pure::Position\">Position</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_at\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#245-257\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.insert_at\" class=\"fn\">insert_at</a>(&amp;mut self, pos: <a class=\"enum\" href=\"penrose/pure/enum.Position.html\" title=\"enum penrose::pure::Position\">Position</a>, client: C)</h4></section></summary><div class=\"docblock\"><p>Insert the given client to the current <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a> at the requested <a href=\"penrose/pure/enum.Position.html\" title=\"enum penrose::pure::Position\">Position</a>.\nIf the client is already present somewhere in the <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a> the stack_set is unmodified.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sink\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#267-271\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.sink\" class=\"fn\">sink</a>(&amp;mut self, client: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;C</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"penrose/pure/geometry/struct.Rect.html\" title=\"struct penrose::pure::geometry::Rect\">Rect</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Clear the floating status of a client, returning its previous preferred\nscreen position if the client was known, otherwise <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_floating\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#274-276\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.is_floating\" class=\"fn\">is_floating</a>(&amp;self, client: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;C</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether a given client is currently floating.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_floating_windows\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#281-285\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.has_floating_windows\" class=\"fn\">has_floating_windows</a>(&amp;self, tag: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether a given tag currently has any floating windows present.</p>\n<p>Returns false if the tag given is unknown to this StackSet.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_client\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#288-295\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.remove_client\" class=\"fn\">remove_client</a>(&amp;mut self, client: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;C</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;</h4></section></summary><div class=\"docblock\"><p>Delete a client from this <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_focused\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#300-303\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.remove_focused\" class=\"fn\">remove_focused</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;C&gt;</h4></section></summary><div class=\"docblock\"><p>Remove the currently focused client from this stack if there is one.</p>\n<p>The client is returned to the caller as <code>Some(C)</code> if there was one.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.kill_focused\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#309-313\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.kill_focused\" class=\"fn\">kill_focused</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Delete the currently focused client from this stack if there is one.</p>\n<p>The following diff will send a kill client message to this client on\nrefresh.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_focused_to_tag\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#317-329\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.move_focused_to_tag\" class=\"fn\">move_focused_to_tag</a>(&amp;mut self, tag: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Move the focused client of the current <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> to the focused position\nof the workspace matching the provided <code>tag</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_focused_to_screen\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#333-346\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.move_focused_to_screen\" class=\"fn\">move_focused_to_screen</a>(&amp;mut self, screen: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Move the focused client of the current <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> to the focused position\nof the workspace on <a href=\"penrose/pure/struct.Screen.html\" title=\"struct penrose::pure::Screen\">Screen</a> <code>screen</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_client_to_tag\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#351-372\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.move_client_to_tag\" class=\"fn\">move_client_to_tag</a>(&amp;mut self, client: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;C</a>, tag: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Move the given client to the focused position of the <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> matching\nthe provided <code>tag</code>. If the client is already on the target workspace it is\nmoved to the focused position.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.move_client_to_current_tag\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#376-378\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.move_client_to_current_tag\" class=\"fn\">move_client_to_current_tag</a>(&amp;mut self, client: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;C</a>)</h4></section></summary><div class=\"docblock\"><p>Move the given client to the focused position of the current <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a>.\nIf the client is already on the target workspace it is moved to the focused position.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_tag\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#389-391\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.contains_tag\" class=\"fn\">contains_tag</a>(&amp;self, tag: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Is the given tag present in the <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a>?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ordered_tags\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#395-405\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.ordered_tags\" class=\"fn\">ordered_tags</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section></summary><div class=\"docblock\"><p>All <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> tags in this <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a> order by their id that have not been\nmarked as being invisible.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ordered_workspaces\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#409-418\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.ordered_workspaces\" class=\"fn\">ordered_workspaces</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;<a class=\"struct\" href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a>&lt;C&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>All Workspaces in this <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a> order by their id that have not been\nmarked as being invisible.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.focus_next_workspace\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#437-439\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.focus_next_workspace\" class=\"fn\">focus_next_workspace</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Move focus to the <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> after the currently focused workspace as defined by their\nposition in <a href=\"penrose/pure/struct.StackSet.html#method.ordered_workspaces\" title=\"method penrose::pure::StackSet::ordered_workspaces\">StackSet::ordered_workspaces</a>.</p>\n<p>As with the behaviour of <a href=\"penrose/pure/struct.StackSet.html#method.pull_tag_to_screen\" title=\"method penrose::pure::StackSet::pull_tag_to_screen\">StackSet::pull_tag_to_screen</a>, if the next tag is on another\nscreen then it will be pulled to the active screen rather than focus moving to the screen\nwhere the tag is currently located.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.focus_previous_workspace\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#447-451\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.focus_previous_workspace\" class=\"fn\">focus_previous_workspace</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Move focus to the <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> before the currently focused workspace as defined by their\nposition in <a href=\"penrose/pure/struct.StackSet.html#method.ordered_workspaces\" title=\"method penrose::pure::StackSet::ordered_workspaces\">StackSet::ordered_workspaces</a>.</p>\n<p>As with the behaviour of <a href=\"penrose/pure/struct.StackSet.html#method.pull_tag_to_screen\" title=\"method penrose::pure::StackSet::pull_tag_to_screen\">StackSet::pull_tag_to_screen</a>, if the next tag is on another\nscreen then it will be pulled to the active screen rather than focus moving to the screen\nwhere the tag is currently located.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag_for_screen\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#456-460\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.tag_for_screen\" class=\"fn\">tag_for_screen</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Find the tag of the <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> currently displayed on <a href=\"penrose/pure/struct.Screen.html\" title=\"struct penrose::pure::Screen\">Screen</a> <code>index</code>.</p>\n<p>Returns <a href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\">None</a> if the index is out of bounds</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag_for_client\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#464-473\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.tag_for_client\" class=\"fn\">tag_for_client</a>(&amp;self, client: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;C</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Find the tag of the <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> containing a given client.\nReturns Some(tag) if the client is known otherwise None.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.screen_for_client\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#477-479\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.screen_for_client\" class=\"fn\">screen_for_client</a>(&amp;self, client: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;C</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"penrose/pure/struct.Screen.html\" title=\"struct penrose::pure::Screen\">Screen</a>&lt;C&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>If the given client is currently visible on a screen return a\nreference to that screen, otherwise None.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tag_for_workspace_id\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#482-486\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.tag_for_workspace_id\" class=\"fn\">tag_for_workspace_id</a>(&amp;self, id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Find the tag of the <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> with the given NetWmDesktop ID.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#489-491\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.contains\" class=\"fn\">contains</a>(&amp;self, client: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;C</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a> contains an element equal to the given value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_client\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#494-501\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.current_client\" class=\"fn\">current_client</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;C</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Extract a reference to the focused element of the current <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_screen\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#504-506\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.current_screen\" class=\"fn\">current_screen</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"penrose/pure/struct.Screen.html\" title=\"struct penrose::pure::Screen\">Screen</a>&lt;C&gt;</h4></section></summary><div class=\"docblock\"><p>An immutable reference to the currently focused <a href=\"penrose/pure/struct.Screen.html\" title=\"struct penrose::pure::Screen\">Screen</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_workspace\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#509-511\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.current_workspace\" class=\"fn\">current_workspace</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a>&lt;C&gt;</h4></section></summary><div class=\"docblock\"><p>An immutable reference to the current <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_workspace_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#514-516\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.current_workspace_mut\" class=\"fn\">current_workspace_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a>&lt;C&gt;</h4></section></summary><div class=\"docblock\"><p>A mutable reference to the current <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_stack\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#519-521\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.current_stack\" class=\"fn\">current_stack</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;C&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>An immutable reference to the current <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a> if there is one</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_tag\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#524-526\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.current_tag\" class=\"fn\">current_tag</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\"><p>The <code>tag</code> of the current <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_workspace\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#534-553\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.add_workspace\" class=\"fn\">add_workspace</a>&lt;T&gt;(&amp;mut self, tag: T, layouts: <a class=\"type\" href=\"penrose/core/layout/type.LayoutStack.html\" title=\"type penrose::core::layout::LayoutStack\">LayoutStack</a>) -&gt; <a class=\"type\" href=\"penrose/type.Result.html\" title=\"type penrose::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Add a new <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> to this <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a>.</p>\n<p>The id assigned to this workspace will be max(workspace ids) + 1.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>This function will error with <code>NonUniqueTags</code> if the given tag is already present.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_invisible_workspace\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#563-572\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.add_invisible_workspace\" class=\"fn\">add_invisible_workspace</a>&lt;T&gt;(&amp;mut self, tag: T) -&gt; <a class=\"type\" href=\"penrose/type.Result.html\" title=\"type penrose::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Add a new invisible <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> to this <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a>.</p>\n<p>It will not be possible to focus this workspace on a screen but its\nstate will be tracked and clients can be placed on it.\nThe id assigned to this workspace will be max(workspace ids) + 1.</p>\n<h5 id=\"errors-2\"><a class=\"doc-anchor\" href=\"#errors-2\">§</a>Errors</h5>\n<p>This function will error with <code>NonUniqueTags</code> if the given tag is already present.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.workspace\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#575-577\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.workspace\" class=\"fn\">workspace</a>(&amp;self, tag: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"struct\" href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a>&lt;C&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>A reference to the <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> with a tag of <code>tag</code> if there is one</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.workspace_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#580-582\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.workspace_mut\" class=\"fn\">workspace_mut</a>(&amp;mut self, tag: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"struct\" href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a>&lt;C&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>A mutable reference to the <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> with a tag of <code>tag</code> if there is one</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_layout\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#585-587\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.next_layout\" class=\"fn\">next_layout</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Switch to the next available <a href=\"penrose/core/layout/trait.Layout.html\" title=\"trait penrose::core::layout::Layout\">Layout</a> on the focused <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.previous_layout\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#590-592\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.previous_layout\" class=\"fn\">previous_layout</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Switch to the previous available <a href=\"penrose/core/layout/trait.Layout.html\" title=\"trait penrose::core::layout::Layout\">Layout</a> on the focused <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_layout_by_name\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#598-603\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.set_layout_by_name\" class=\"fn\">set_layout_by_name</a>(&amp;mut self, layout: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.str.html\">str</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Attempt to set the current <a href=\"penrose/core/layout/trait.Layout.html\" title=\"trait penrose::core::layout::Layout\">Layout</a> by name.</p>\n<p>This is a no-op if the requested layout is already active or if no layout with the given name\nis available for the active workspace.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_screen\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#606-613\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.next_screen\" class=\"fn\">next_screen</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Move focus to the next <a href=\"penrose/pure/struct.Screen.html\" title=\"struct penrose::pure::Screen\">Screen</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.previous_screen\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#616-623\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.previous_screen\" class=\"fn\">previous_screen</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Move focus to the previous <a href=\"penrose/pure/struct.Screen.html\" title=\"struct penrose::pure::Screen\">Screen</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drag_workspace_forward\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#626-637\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.drag_workspace_forward\" class=\"fn\">drag_workspace_forward</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Drag the focused workspace onto the next <a href=\"penrose/pure/struct.Screen.html\" title=\"struct penrose::pure::Screen\">Screen</a>, holding focus</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drag_workspace_backward\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#640-651\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.drag_workspace_backward\" class=\"fn\">drag_workspace_backward</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Drag the focused workspace onto the previous <a href=\"penrose/pure/struct.Screen.html\" title=\"struct penrose::pure::Screen\">Screen</a>, holding focus</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#655-660\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.with\" class=\"fn\">with</a>&lt;T, F&gt;(&amp;self, default: T, f: F) -&gt; T<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;<a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;C&gt;) -&gt; T,</div></h4></section></summary><div class=\"docblock\"><p>If the current <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a> is <a href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\">None</a>, return <code>default</code> otherwise\napply the function to it to generate a value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.modify\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#664-669\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.modify\" class=\"fn\">modify</a>&lt;F&gt;(&amp;mut self, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;C&gt;&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;C&gt;&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Apply a function to modify the current <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a> if there is one\nor compute and inject a default value if it is currently <a href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\">None</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.modify_occupied\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#673-678\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.modify_occupied\" class=\"fn\">modify_occupied</a>&lt;F&gt;(&amp;mut self, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(<a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;C&gt;) -&gt; <a class=\"struct\" href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>&lt;C&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Apply a function to modify the current <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a> if it is non-empty\nwithout allowing for emptying it entirely.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.screens\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#688-690\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.screens\" class=\"fn\">screens</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;<a class=\"struct\" href=\"penrose/pure/struct.Screen.html\" title=\"struct penrose::pure::Screen\">Screen</a>&lt;C&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Iterate over each <a href=\"penrose/pure/struct.Screen.html\" title=\"struct penrose::pure::Screen\">Screen</a> in this <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a> in an arbitrary order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.screens_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#693-695\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.screens_mut\" class=\"fn\">screens_mut</a>(&amp;mut self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;mut <a class=\"struct\" href=\"penrose/pure/struct.Screen.html\" title=\"struct penrose::pure::Screen\">Screen</a>&lt;C&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Mutably iterate over each <a href=\"penrose/pure/struct.Screen.html\" title=\"struct penrose::pure::Screen\">Screen</a> in this <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a> in an arbitrary order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.workspaces\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#698-703\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.workspaces\" class=\"fn\">workspaces</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;<a class=\"struct\" href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a>&lt;C&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Iterate over each <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> in this <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a> in an arbitrary order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.non_hidden_workspaces\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#706-709\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.non_hidden_workspaces\" class=\"fn\">non_hidden_workspaces</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;<a class=\"struct\" href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a>&lt;C&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Iterate over each non-hidden <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> in this <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a> in an arbitrary order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.workspaces_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#712-717\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.workspaces_mut\" class=\"fn\">workspaces_mut</a>(&amp;mut self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;mut <a class=\"struct\" href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a>&lt;C&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Mutably iterate over each <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> in this <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a> in an arbitrary order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_screen_workspaces\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#720-722\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.on_screen_workspaces\" class=\"fn\">on_screen_workspaces</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;<a class=\"struct\" href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a>&lt;C&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Iterate over the <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> currently displayed on a screen in an arbitrary order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hidden_workspaces\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#725-727\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.hidden_workspaces\" class=\"fn\">hidden_workspaces</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;<a class=\"struct\" href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a>&lt;C&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Iterate over the currently hidden <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> in this <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a> in an arbitrary order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hidden_workspaces_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#730-732\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.hidden_workspaces_mut\" class=\"fn\">hidden_workspaces_mut</a>(\n    &amp;mut self,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;mut <a class=\"struct\" href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a>&lt;C&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Iterate over the currently hidden <a href=\"penrose/pure/struct.Workspace.html\" title=\"struct penrose::pure::Workspace\">Workspace</a> in this <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a> in an arbitrary order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clients\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#735-737\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.clients\" class=\"fn\">clients</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;C</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Iterate over each client in this <a href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a> in an arbitrary order.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_screen_workspace_clients\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#744-746\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.on_screen_workspace_clients\" class=\"fn\">on_screen_workspace_clients</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;C</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Iterate over clients present in on-screen Workspaces.</p>\n<p><em>NOTE</em>: this does <em>not</em> mean that every client returned by this iterator\nis visible on the screen: only that it is currently assigned to a workspace\nthat is displayed on a screen.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hidden_workspace_clients\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#749-751\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.hidden_workspace_clients\" class=\"fn\">hidden_workspace_clients</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.reference.html\">&amp;C</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Iterate over clients from workspaces not currently mapped to a screen.</p>\n</div></details></div></details>",0,"penrose::core::ClientSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StackSet%3CC%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#960-995\">source</a><a href=\"#impl-StackSet%3CC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C&gt; <a class=\"struct\" href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.focus_up\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#960-995\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.focus_up\" class=\"fn\">focus_up</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Move focus from the current element up the <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>, wrapping to\nthe bottom if focus is already at the top.\nThis is a no-op if the current stack is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.focus_down\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#960-995\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.focus_down\" class=\"fn\">focus_down</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Move focus from the current element down the <a href=\"penrose/pure/struct.Stack.html\" title=\"struct penrose::pure::Stack\">Stack</a>, wrapping to\nthe top if focus is already at the bottom.\nThis is a no-op if the current stack is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_up\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#960-995\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.swap_up\" class=\"fn\">swap_up</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Swap the position of the focused element with one above it.\nThe currently focused element is maintained by this operation.\nThis is a no-op if the current stack is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_down\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#960-995\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.swap_down\" class=\"fn\">swap_down</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Swap the position of the focused element with one below it.\nThe currently focused element is maintained by this operation.\nThis is a no-op if the current stack is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_up\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#960-995\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.rotate_up\" class=\"fn\">rotate_up</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Rotate all elements of the stack forward, wrapping from top to bottom.\nThe currently focused position in the stack is maintained by this operation.\nThis is a no-op if the current stack is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_down\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#960-995\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.rotate_down\" class=\"fn\">rotate_down</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Rotate all elements of the stack back, wrapping from bottom to top.\nThe currently focused position in the stack is maintained by this operation.\nThis is a no-op if the current stack is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rotate_focus_to_head\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#960-995\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.rotate_focus_to_head\" class=\"fn\">rotate_focus_to_head</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Rotate the Stack until the current focused element is in the head position.\nThis is a no-op if the current stack is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.focus_head\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#960-995\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.focus_head\" class=\"fn\">focus_head</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Move focus to the element in the head position.\nThis is a no-op if the current stack is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_focus_and_head\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#960-995\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.swap_focus_and_head\" class=\"fn\">swap_focus_and_head</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Swap the current head element with the focused element in the\nstack order. Focus stays with the original focused element.\nThis is a no-op if the current stack is empty.</p>\n</div></details></div></details>",0,"penrose::core::ClientSet"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StackSet%3CXid%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#783-914\">source</a><a href=\"#impl-StackSet%3CXid%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"penrose/pure/struct.StackSet.html\" title=\"struct penrose::pure::StackSet\">StackSet</a>&lt;<a class=\"struct\" href=\"penrose/struct.Xid.html\" title=\"struct penrose::Xid\">Xid</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.float\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#794-805\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.float\" class=\"fn\">float</a>(&amp;mut self, client: <a class=\"struct\" href=\"penrose/struct.Xid.html\" title=\"struct penrose::Xid\">Xid</a>, r: <a class=\"struct\" href=\"penrose/pure/geometry/struct.Rect.html\" title=\"struct penrose::pure::geometry::Rect\">Rect</a>) -&gt; <a class=\"type\" href=\"penrose/type.Result.html\" title=\"type penrose::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.80.1/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Record a known client as floating, giving its preferred screen position.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This method with return <a href=\"penrose/enum.Error.html#variant.UnknownClient\" title=\"variant penrose::Error::UnknownClient\">Error::UnknownClient</a> if the given client is\nnot already managed in this stack_set.</p>\n<p>This method with return <a href=\"penrose/enum.Error.html#variant.ClientIsNotVisible\" title=\"variant penrose::Error::ClientIsNotVisible\">Error::ClientIsNotVisible</a> if the given client is\nnot currently mapped to a screen. This is required to determine the correct\nrelative positioning for the floating client as is it is moved between\nscreens.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle_floating_state\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose/pure/stack_set.rs.html#818-826\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose/pure/struct.StackSet.html#tymethod.toggle_floating_state\" class=\"fn\">toggle_floating_state</a>(\n    &amp;mut self,\n    client: <a class=\"struct\" href=\"penrose/struct.Xid.html\" title=\"struct penrose::Xid\">Xid</a>,\n    r: <a class=\"struct\" href=\"penrose/pure/geometry/struct.Rect.html\" title=\"struct penrose::pure::geometry::Rect\">Rect</a>,\n) -&gt; <a class=\"type\" href=\"penrose/type.Result.html\" title=\"type penrose::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"penrose/pure/geometry/struct.Rect.html\" title=\"struct penrose::pure::geometry::Rect\">Rect</a>&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>If a known client is floating, sink it and return its previous preferred screen position.\nOtherwise, record it as floating with its preferred screen position.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>This method with return <a href=\"penrose/enum.Error.html#variant.UnknownClient\" title=\"variant penrose::Error::UnknownClient\">Error::UnknownClient</a> if the given client is\nnot already managed in this stack_set.</p>\n<p>This method with return <a href=\"penrose/enum.Error.html#variant.ClientIsNotVisible\" title=\"variant penrose::Error::ClientIsNotVisible\">Error::ClientIsNotVisible</a> if the given client is\nnot currently mapped to a screen. This is required to determine the correct\nrelative positioning for the floating client as is it is moved between\nscreens.</p>\n</div></details></div></details>",0,"penrose::core::ClientSet"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()