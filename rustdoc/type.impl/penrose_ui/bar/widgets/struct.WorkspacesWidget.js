(function() {var type_impls = {
"penrose_ui":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-WorkspacesWidget%3CU%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/workspaces.rs.html#189\">source</a><a href=\"#impl-Clone-for-WorkspacesWidget%3CU%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"penrose_ui/bar/widgets/struct.WorkspacesWidget.html\" title=\"struct penrose_ui::bar::widgets::WorkspacesWidget\">WorkspacesWidget</a>&lt;U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"penrose_ui/bar/widgets/trait.WorkspacesUi.html\" title=\"trait penrose_ui::bar::widgets::WorkspacesUi\">WorkspacesUi</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/workspaces.rs.html#189\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"penrose_ui/bar/widgets/struct.WorkspacesWidget.html\" title=\"struct penrose_ui::bar::widgets::WorkspacesWidget\">WorkspacesWidget</a>&lt;U&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","penrose_ui::bar::widgets::workspaces::Workspaces"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-WorkspacesWidget%3CU%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/workspaces.rs.html#189\">source</a><a href=\"#impl-Debug-for-WorkspacesWidget%3CU%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"penrose_ui/bar/widgets/struct.WorkspacesWidget.html\" title=\"struct penrose_ui::bar::widgets::WorkspacesWidget\">WorkspacesWidget</a>&lt;U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"penrose_ui/bar/widgets/trait.WorkspacesUi.html\" title=\"trait penrose_ui::bar::widgets::WorkspacesUi\">WorkspacesUi</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/workspaces.rs.html#189\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","penrose_ui::bar::widgets::workspaces::Workspaces"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-WorkspacesWidget%3CU%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/workspaces.rs.html#189\">source</a><a href=\"#impl-PartialEq-for-WorkspacesWidget%3CU%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"penrose_ui/bar/widgets/struct.WorkspacesWidget.html\" title=\"struct penrose_ui::bar::widgets::WorkspacesWidget\">WorkspacesWidget</a>&lt;U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"penrose_ui/bar/widgets/trait.WorkspacesUi.html\" title=\"trait penrose_ui::bar::widgets::WorkspacesUi\">WorkspacesUi</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/workspaces.rs.html#189\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"penrose_ui/bar/widgets/struct.WorkspacesWidget.html\" title=\"struct penrose_ui::bar::widgets::WorkspacesWidget\">WorkspacesWidget</a>&lt;U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","penrose_ui::bar::widgets::workspaces::Workspaces"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Widget%3CX%3E-for-WorkspacesWidget%3CU%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/workspaces.rs.html#272-341\">source</a><a href=\"#impl-Widget%3CX%3E-for-WorkspacesWidget%3CU%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;X, U&gt; <a class=\"trait\" href=\"penrose_ui/bar/widgets/trait.Widget.html\" title=\"trait penrose_ui::bar::widgets::Widget\">Widget</a>&lt;X&gt; for <a class=\"struct\" href=\"penrose_ui/bar/widgets/struct.WorkspacesWidget.html\" title=\"struct penrose_ui::bar::widgets::WorkspacesWidget\">WorkspacesWidget</a>&lt;U&gt;<div class=\"where\">where\n    X: <a class=\"trait\" href=\"penrose/x/trait.XConn.html\" title=\"trait penrose::x::XConn\">XConn</a>,\n    U: <a class=\"trait\" href=\"penrose_ui/bar/widgets/trait.WorkspacesUi.html\" title=\"trait penrose_ui::bar::widgets::WorkspacesUi\">WorkspacesUi</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.draw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/workspaces.rs.html#277-299\">source</a><a href=\"#method.draw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"penrose_ui/bar/widgets/trait.Widget.html#tymethod.draw\" class=\"fn\">draw</a>(\n    &amp;mut self,\n    ctx: &amp;mut <a class=\"struct\" href=\"penrose_ui/core/struct.Context.html\" title=\"struct penrose_ui::core::Context\">Context</a>&lt;'_&gt;,\n    screen: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.usize.html\">usize</a>,\n    screen_has_focus: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a>,\n    w: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>,\n    h: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"type\" href=\"penrose_ui/type.Result.html\" title=\"type penrose_ui::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Render the current state of the widget to the status bar window.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.current_extent\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/workspaces.rs.html#301-320\">source</a><a href=\"#method.current_extent\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"penrose_ui/bar/widgets/trait.Widget.html#tymethod.current_extent\" class=\"fn\">current_extent</a>(\n    &amp;mut self,\n    ctx: &amp;mut <a class=\"struct\" href=\"penrose_ui/core/struct.Context.html\" title=\"struct penrose_ui::core::Context\">Context</a>&lt;'_&gt;,\n    _h: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"type\" href=\"penrose_ui/type.Result.html\" title=\"type penrose_ui::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>)&gt;</h4></section></summary><div class='docblock'>Current required width and height for this widget due to its content</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_greedy\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/workspaces.rs.html#322-324\">source</a><a href=\"#method.is_greedy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"penrose_ui/bar/widgets/trait.Widget.html#tymethod.is_greedy\" class=\"fn\">is_greedy</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>If true, this widget will expand to fill remaining available space after layout has been\ncomputed. If multiple greedy widgets are present in a given StatusBar then the available\nspace will be split evenly between all widgets.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.require_draw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/workspaces.rs.html#326-328\">source</a><a href=\"#method.require_draw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"penrose_ui/bar/widgets/trait.Widget.html#tymethod.require_draw\" class=\"fn\">require_draw</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Does this widget currently require re-rendering? (should be reset to false when ‘draw’ is called)</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_startup\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/workspaces.rs.html#330-334\">source</a><a href=\"#method.on_startup\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"penrose_ui/bar/widgets/trait.Widget.html#method.on_startup\" class=\"fn\">on_startup</a>(&amp;mut self, state: &amp;mut <a class=\"struct\" href=\"penrose/core/struct.State.html\" title=\"struct penrose::core::State\">State</a>&lt;X&gt;, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;X</a>) -&gt; <a class=\"type\" href=\"penrose_ui/type.Result.html\" title=\"type penrose_ui::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>A startup hook to be run in order to initialise this Widget</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_refresh\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/workspaces.rs.html#336-340\">source</a><a href=\"#method.on_refresh\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"penrose_ui/bar/widgets/trait.Widget.html#method.on_refresh\" class=\"fn\">on_refresh</a>(&amp;mut self, state: &amp;mut <a class=\"struct\" href=\"penrose/core/struct.State.html\" title=\"struct penrose::core::State\">State</a>&lt;X&gt;, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;X</a>) -&gt; <a class=\"type\" href=\"penrose_ui/type.Result.html\" title=\"type penrose_ui::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>A refresh hook to be run in order to update this Widget</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_schedule\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/mod.rs.html#52-54\">source</a><a href=\"#method.update_schedule\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"penrose_ui/bar/widgets/trait.Widget.html#method.update_schedule\" class=\"fn\">update_schedule</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"penrose_ui/bar/schedule/struct.UpdateSchedule.html\" title=\"struct penrose_ui::bar::schedule::UpdateSchedule\">UpdateSchedule</a>&gt;</h4></section></summary><div class='docblock'>An <a href=\"penrose_ui/bar/schedule/struct.UpdateSchedule.html\" title=\"struct penrose_ui::bar::schedule::UpdateSchedule\">UpdateSchedule</a> to allow for external updates to this Widget’s state independently of\nthe window manager event loop.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/mod.rs.html#64-66\">source</a><a href=\"#method.on_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"penrose_ui/bar/widgets/trait.Widget.html#method.on_event\" class=\"fn\">on_event</a>(\n    &amp;mut self,\n    event: &amp;<a class=\"enum\" href=\"penrose/x/event/enum.XEvent.html\" title=\"enum penrose::x::event::XEvent\">XEvent</a>,\n    state: &amp;mut <a class=\"struct\" href=\"penrose/core/struct.State.html\" title=\"struct penrose::core::State\">State</a>&lt;X&gt;,\n    x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;X</a>,\n) -&gt; <a class=\"type\" href=\"penrose_ui/type.Result.html\" title=\"type penrose_ui::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>An event hook to be run in order to update this Widget</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_new_client\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/mod.rs.html#76-78\">source</a><a href=\"#method.on_new_client\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"penrose_ui/bar/widgets/trait.Widget.html#method.on_new_client\" class=\"fn\">on_new_client</a>(&amp;mut self, id: <a class=\"struct\" href=\"penrose/core/struct.Xid.html\" title=\"struct penrose::core::Xid\">Xid</a>, state: &amp;mut <a class=\"struct\" href=\"penrose/core/struct.State.html\" title=\"struct penrose::core::State\">State</a>&lt;X&gt;, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;X</a>) -&gt; <a class=\"type\" href=\"penrose_ui/type.Result.html\" title=\"type penrose_ui::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>A manage hook to be run in order to update this Widget</div></details></div></details>","Widget<X>","penrose_ui::bar::widgets::workspaces::Workspaces"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WorkspacesWidget%3CU%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/workspaces.rs.html#201-270\">source</a><a href=\"#impl-WorkspacesWidget%3CU%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U&gt; <a class=\"struct\" href=\"penrose_ui/bar/widgets/struct.WorkspacesWidget.html\" title=\"struct penrose_ui::bar::widgets::WorkspacesWidget\">WorkspacesWidget</a>&lt;U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"penrose_ui/bar/widgets/trait.WorkspacesUi.html\" title=\"trait penrose_ui::bar::widgets::WorkspacesUi\">WorkspacesUi</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_with_ui\" class=\"method\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/workspaces.rs.html#206-214\">source</a><h4 class=\"code-header\">pub fn <a href=\"penrose_ui/bar/widgets/struct.WorkspacesWidget.html#tymethod.new_with_ui\" class=\"fn\">new_with_ui</a>(ui: U) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a new <a href=\"penrose_ui/bar/widgets/struct.WorkspacesWidget.html\" title=\"struct penrose_ui::bar::widgets::WorkspacesWidget\">WorkspacesWidget</a> with the specified <a href=\"penrose_ui/bar/widgets/trait.WorkspacesUi.html\" title=\"trait penrose_ui::bar::widgets::WorkspacesUi\">WorkspacesUi</a> implementation.</p>\n</div></details></div></details>",0,"penrose_ui::bar::widgets::workspaces::Workspaces"],["<section id=\"impl-StructuralPartialEq-for-WorkspacesWidget%3CU%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/penrose_ui/bar/widgets/workspaces.rs.html#189\">source</a><a href=\"#impl-StructuralPartialEq-for-WorkspacesWidget%3CU%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"penrose_ui/bar/widgets/struct.WorkspacesWidget.html\" title=\"struct penrose_ui::bar::widgets::WorkspacesWidget\">WorkspacesWidget</a>&lt;U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"penrose_ui/bar/widgets/trait.WorkspacesUi.html\" title=\"trait penrose_ui::bar::widgets::WorkspacesUi\">WorkspacesUi</a>,</div></h3></section>","StructuralPartialEq","penrose_ui::bar::widgets::workspaces::Workspaces"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()