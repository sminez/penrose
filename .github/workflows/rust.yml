name: Build

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: info
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Rust ${{ matrix.rust }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta, nightly]
        features: ["xcb,xcb_draw", "xcb,xcb_draw,serde"]

    steps:
    - uses: actions/checkout@v2
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}

    - name: Install C deps
      run: sudo apt-get update && sudo apt-get install -y libxrandr-dev libx11-xcb-dev libxcb-randr0-dev libpango1.0-dev libcairo2-dev --fix-missing

    - name: Run tests
      run: cargo test --workspace --features ${{ matrix.features }} --verbose

  rustfmt:
    name: Ensure rustfmt is happy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hecrj/setup-rust-action@v1
      with:
        components: rustfmt
    - run: cargo fmt --all -- --check

  clippy:
    name: Lint the codebase with clippy
    runs-on: ubuntu-latest
    # env:
    #   RUSTFLAGS: -Dwarnings
    steps:
    - uses: actions/checkout@v2
    - uses: hecrj/setup-rust-action@v1
      with:
        components: clippy
    - run: sudo apt-get update && sudo apt-get install -y libxrandr-dev libx11-xcb-dev libxcb-randr0-dev libpango1.0-dev libcairo2-dev --fix-missing
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --workspace --all-targets --all-features --examples --tests

  rustdoc-links:
    name: Check doc links are valid
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: nightly
    - run: sudo apt-get update && sudo apt-get install -y libxrandr-dev libx11-xcb-dev libxcb-randr0-dev libpango1.0-dev libcairo2-dev --fix-missing
    - run: cargo rustdoc --all-features
